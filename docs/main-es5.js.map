{"version":3,"sources":["webpack:///src/app/components/categorias/categorias.component.ts","webpack:///src/app/components/post-new/post-new.component.css","webpack:///src/app/components/home/home.component.css","webpack:///src/app/components/user-edit/user-edit.component.ts","webpack:///src/app/models/user.ts","webpack:///src/app/components/category-new/category-new.component.html","webpack:///src/app/components/user-edit/user-edit.component.html","webpack:///src/app/components/error/error.component.ts","webpack:///src/app/components/post-new/post-new.component.html","webpack:///src/app/components/post-edit/post-edit.component.html","webpack:///src/app/app.component.css","webpack:///src/environments/environment.ts","webpack:///src/app/components/post-new/post-new.component.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/services/post.service.ts","webpack:///src/app/models/post.ts","webpack:///src/app/components/post-detail/post-detail.component.css","webpack:///src/app/components/category-detail/category-detail.component.css","webpack:///src/app/components/category-detail/category-detail.component.html","webpack:///src/app/components/category-new/category-new.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/identity.guard.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/components/post-detail/post-detail.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/models/categoty.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/services/apiglobal.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/categorias/categorias.component.css","webpack:///src/app/components/user-edit/user-edit.component.css","webpack:///src/app/services/category.service.ts","webpack:///src/app/pipes/imagenone.pipe.ts","webpack:///src/app/components/error/error.component.css","webpack:///src/app/components/category-new/category-new.component.css","webpack:///src/app/components/categorias/categorias.component.html","webpack:///src/app/components/error/error.component.html","webpack:///src/app/components/category-detail/category-detail.component.ts","webpack:///src/app/components/login/login.component.css","webpack:///src/app/components/profile/profile.component.css","webpack:///src/app/services/user.service.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/post-edit/post-edit.component.ts","webpack:///src/app/components/post-edit/post-edit.component.css","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/post-detail/post-detail.component.html","webpack:///src/app/components/register/register.component.css","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CategoriasComponent","page_title","selector","template","UserEditComponent","_userService","status","urlapi","url","loading","opcionesfroala","language","toolbarButtons","afuConfig","multiple","formatsAllowed","maxSize","uploadAPI","headers","getToken","theme","hideProgressBar","hideResetBtn","hideSelectBtn","replaceTexts","selectFileBtn","resetBtn","uploadBtn","dragNDropBox","attachPinBtn","afterUploadMsg_success","afterUploadMsg_error","identity","getIdentity","token","user","userall","id","name","surname","role","email","description","image","console","log","form","updateuser","subscribe","response","localStorage","setItem","JSON","stringify","error","datos","data","parse","imagename","User","password","ErrorComponent","environment","production","PostNewComponent","_route","_activeRouter","_categoryService","_postService","post","sub","getCategories","categories","create","setTimeout","navigate","image_data","nameimage","HomeComponent","indentity","getPosts","posts","deletePost","ProfileComponent","_activeRoute","iduser","snapshot","params","userId","PostService","_http","content","htmlEntities","json","set","get","put","providedIn","Post","user_id","category_id","createdAt","CategoryNewComponent","_router","_activateroute","category","addnewCategory","IdentityGuard","ROUTES","path","component","canActivate","APPROUTINGPROVIDERS","ROUTING","forRoot","relativeLinkResolution","PostDetailComponent","getPost","AppComponent","_categoryServie","title","loadUser","Category","LoginComponent","logout","signup","dato","removeItem","RegisterComponent","register","reset","emailcheck","nameerror","length","urlglobal","str","String","replace","AppModule","declarations","imports","providers","bootstrap","CategoryService","http","ImagenonePipe","value","args","CategoryDetailComponent","getPostByCategory","getCategory","UserService","gettoken","getItem","PostEditComponent","userid","updatepost","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categorias',\n  templateUrl: './categorias.component.html',\n  styleUrls: ['./categorias.component.css']\n})\nexport class CategoriasComponent implements OnInit {\n\n  page_title = 'Categorias'\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3N0LW5ldy5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { urlglobal } from '../../services/apiglobal'\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit \n{\n\n  page_title = 'Ajustes de Usuario'\n  user: User;\n  identity;\n  token;\n  status = '';\n  urlapi = urlglobal.url;\n\n  loading = true;\n\n  opcionesfroala: Object = {\n    language: 'es',\n    toolbarButtons: {\n      'moreText': {\n        'buttons': ['bold', 'italic', 'underline', 'strikeThrough', 'paragraphFormat', 'superscript', \n        'fontFamily', 'fontSize', 'textColor', 'backgroundColor', 'inlineClass', 'inlineStyle',\n         'clearFormatting']\n      }\n    }\n  };\n\n  afuConfig = {\n    multiple: false,\n    formatsAllowed: \".jpg,.png, .gig, .jpeg\",\n    maxSize: \"50\",\n    uploadAPI:  {\n      url: this.urlapi + 'user/upload',\n      headers: {\n      \"Authorization\" : this._userService.getToken()\n      }\n    },\n    theme: \"attachPin\",\n    hideProgressBar: false,\n    hideResetBtn: false,\n    hideSelectBtn: false,\n    replaceTexts: {\n      selectFileBtn: 'Select Files',\n      resetBtn: 'Reset',\n      uploadBtn: 'Upload',\n      dragNDropBox: 'Drag N Drop',\n      attachPinBtn: 'Sube Tu Avatar de usuario',\n      afterUploadMsg_success: 'Successfully Uploaded !',\n      afterUploadMsg_error: 'Upload Failed !'\n    }\n  };\n\n\n  constructor(private _userService: UserService)\n  {\n    // this.user = new User(1,'','','ROLE_USER','','','','');\n\n    this.identity = _userService.getIdentity();\n    this.token = _userService.getToken();\n\n    this.user = new User(\n      this.identity.userall.id,\n      this.identity.userall.name,\n      this.identity.userall.surname,      \n      this.identity.userall.role,      \n      this.identity.userall.email, \n      '',      \n      this.identity.userall.description,      \n      this.identity.userall.image,      \n    );\n\n    console.log(this.identity.userall);\n    \n\n  }\n\n  ngOnInit() \n  {\n\n  }\n\n  enviarUpdateUser(form)\n  {\n    this._userService.updateuser(this.token, this.user).subscribe(\n    response =>{\n      this.status = \"success\"\n      console.log(\"WELL Update user\", response);\n\n      if(response.status == 'success')\n      {\n        this.identity.userall = this.user;\n        this.identity.name = this.user.name;\n        this.identity.surname = this.user.surname;\n        this.identity.email = this.user.email;\n        console.log(this.identity.userall);\n        console.log(\"toke\",this.identity);\n        \n        localStorage.setItem('identity', JSON.stringify(this.identity));\n      }\n    },\n    error => \n    {\n      console.log(\"Error Update user\", error); \n      this.status = \"Hya un error en algun lado ajjaja arregls\"\n    }\n    );\n  }\n\n  ImagenUpload(datos)\n  {\n     //console.log(\"IMAGEN RTA\", JSON.parse( datos.response));\n     let data = JSON.parse( datos.response);\n     this.user.image = data.imagename;\n  }\n}\n","export class User\n{\n    constructor\n    (\n        public id: number,\n        public name: string,\n        public surname: string,\n        public role: string,\n        public email: string,\n        public password: string,\n        public description: string,\n        public image: string\n    ){}\n}\n","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n    <h1>{{ page_title }}</h1>\\n    <p *ngIf=\\\"status == ''\\\">\\n      Crea una Nueva  <b>CATEGORIA</b>!!!\\n    </p>\\n    <hr/>\\n     \\n    <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n      Categoria Creada correctamente. &nbsp; \\n    </div>\\n  \\n    <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n      Error al crear la categoria. <br> <small> {{ status }}</small>  &nbsp; \\n    </div>\\n  \\n  \\n    <!-- Formulario de Crear Categoria -->\\n\\n   <form #categoryForm=\\\"ngForm\\\" (ngSubmit)=\\\"enviarnewCategoria(categoryForm)\\\"\\n    class=\\\"col-md-5\\\">\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Nombre</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"category.name\\\" required pattern=\\\"[a-zA-Z ]+\\\"/>\\n  \\n        <small *ngIf=\\\"name.invalid && name.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El nombre de la Catedpria no es valido\\n        </small>\\n      </div>\\n\\n      <input type=\\\"submit\\\" value=\\\"Add Categoria\\\" class=\\\"btn btn-success\\\"\\n      [disabled]=\\\"categoryForm.invalid\\\">\\n\\n   </form>\\n  </div>\";","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n  <h1>{{ page_title }}</h1>\\n  <p *ngIf=\\\"status == ''\\\">\\n    Seccion para editar datos de <b>USUARIO</b>!!!\\n  </p>\\n  <hr/>\\n  <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n    Usuario Editado correctamente. &nbsp; \\n  </div>\\n\\n  <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n    Error al editar el Usuario. <br> <small> {{ status }}</small>  &nbsp; \\n  </div>\\n\\n\\n  <!-- Formulario de Ajustes -->\\n\\n  <form  class=\\\"card p-3 col-md-6 \\\" #usereditForm=\\\"ngForm\\\" \\n    (ngSubmit)=\\\"enviarUpdateUser(usereditForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Nombre</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.name\\\" required pattern=\\\"[a-zA-Z]+\\\"/>\\n\\n      <small *ngIf=\\\"name.invalid && name.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n        El name no es valido\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"surname\\\">Apellido</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.surname\\\" required pattern=\\\"[a-zA-Z]+\\\"/>\\n\\n      <small *ngIf=\\\"surname.invalid && surname.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          Los Apellidos no son validos\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"email\\\"class=\\\"form-control\\\"  name=\\\"email\\\"  #email=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"/>\\n\\n      <small *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El email no es valido\\n      </small>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Descripcion</label>\\n      <textarea [(froalaModel)]=\\\"user.description\\\"\\n      [froalaEditor]=\\\"opcionesfroala\\\" type=\\\"text\\\" \\n      name=\\\"description\\\"></textarea>\\n      \\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"image\\\">Avatar</label>\\n      <div *ngIf=\\\"identity && identity.userall.image\\\" class=\\\"container my-3\\\">\\n        <img src=\\\"{{ urlapi + 'user/avatar/' + identity.userall.image }}\\\" alt=\\\"Imagen Avatar User\\\"\\n        class=\\\"img-fluid\\\">\\n      </div>\\n      <angular-file-uploader\\n        [config]=\\\"afuConfig\\\"\\n        [resetUpload]=resetVar\\n        (ApiResponse)=\\\"ImagenUpload($event)\\\">\\n      </angular-file-uploader>\\n      <!-- <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"image\\\"  #image=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.image\\\"  /> -->\\n    </div>\\n\\n    <input type=\\\"submit\\\" value=\\\"Guardar Cambios\\\" class=\\\"btn btn-success\\\" \\n          [disabled]=\\\"usereditForm.invalid\\\">\\n  </form>\\n\\n\\n\\n</div>\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  page_title = 'Pagina No Encontrada'\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n    <h1>{{ page_title }}</h1>\\n    <p *ngIf=\\\"status == ''\\\">\\n        Seccion para Crear POST con un <b>USUARIO</b>!!!\\n    </p>\\n    <hr/>\\n    <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n      Post Creado correctamente. &nbsp; \\n    </div>\\n  \\n    <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n      Error al crear el Post. <br> &nbsp; \\n    </div>\\n  \\n  \\n    <!-- Formulario de Ajustes -->\\n  \\n    <form  class=\\\"card p-3 col-md-6 \\\" #postnewForm=\\\"ngForm\\\" \\n      (ngSubmit)=\\\"newpost(postnewForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Titulo</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"post.title\\\" required />\\n  \\n        <small *ngIf=\\\"title.invalid && title.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El titulo no es Valido\\n        </small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"content\\\">Contenido</label>\\n        <textarea [(froalaModel)]=\\\"post.content\\\"\\n        [(ngModel)]=\\\"post.content\\\"\\n        [froalaEditor]=\\\"opcionesfroala\\\" type=\\\"text\\\" \\n        name=\\\"content\\\" #content=\\\"ngModel\\\" required></textarea>\\n        \\n        <small *ngIf=\\\"content.invalid && content.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n            El contenido es obligatorio\\n        </small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"category_id\\\">Selecciones Categorias</label>\\n          <select class=\\\"form-control\\\" id=\\\"category_id\\\" required\\n          name=\\\"category_id\\\" #category=\\\"ngModel\\\" [(ngModel)]=\\\"post.category_id\\\">\\n            <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n              {{  category.name }}\\n            </option>\\n          </select>\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"image\\\">Imagen Post</label>\\n          <!-- <div *ngIf=\\\"identity && identity.userall.image\\\" class=\\\"container my-3\\\">\\n            <img src=\\\"{{ urlapi + 'user/avatar/' + identity.userall.image }}\\\" alt=\\\"Imagen Avatar User\\\"\\n            class=\\\"img-fluid\\\">\\n          </div> -->\\n          <angular-file-uploader\\n            [config]=\\\"afuConfig\\\"\\n            [resetUpload]=resetVar\\n            (ApiResponse)=\\\"ImagenUpload($event)\\\">\\n          </angular-file-uploader>\\n    \\n        </div>\\n  \\n      <input type=\\\"submit\\\" value=\\\"Crear Post\\\" class=\\\"btn btn-success\\\" \\n            [disabled]=\\\"postnewForm.invalid\\\">\\n    </form>\\n  \\n  \\n  \\n  </div>\";","export default \"<div class=\\\"col-md-12 m-3\\\" *ngIf=\\\"post; else loading\\\">\\n\\n    <h1>{{ page_title }}</h1>\\n    <p *ngIf=\\\"status == ''\\\">\\n        Seccion para Editar POST con un <b>USUARIO</b>!!!\\n    </p>\\n    <hr/>\\n    <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n      Post Editado correctamente. &nbsp; \\n    </div>\\n  \\n    <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n      Error al editar el Post. <br> &nbsp; \\n    </div>\\n  \\n  \\n    <!-- Formulario de Ajustes -->\\n  \\n    <form  class=\\\"card p-3 col-md-6 \\\" #posteditForm=\\\"ngForm\\\" \\n      (ngSubmit)=\\\"editpost(posteditForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Titulo</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"post.title\\\" required />\\n  \\n        <small *ngIf=\\\"title.invalid && title.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El titulo no es Valido\\n        </small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"content\\\">Contenido</label>\\n        <textarea [(froalaModel)]=\\\"post.content\\\"\\n        [(ngModel)]=\\\"post.content\\\"\\n        [froalaEditor]=\\\"opcionesfroala\\\" type=\\\"text\\\" \\n        name=\\\"content\\\" #content=\\\"ngModel\\\" required></textarea>\\n        \\n        <small *ngIf=\\\"content.invalid && content.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n            El contenido es obligatorio\\n        </small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"category_id\\\">Selecciones Categorias</label>\\n          <select class=\\\"form-control\\\" id=\\\"category_id\\\" required\\n          name=\\\"category_id\\\" #category=\\\"ngModel\\\" [(ngModel)]=\\\"post.category_id\\\">\\n            <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n              {{  category.name }}\\n            </option>\\n          </select>\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"image\\\">Imagen Post</label>\\n          <div *ngIf=\\\"post.image\\\" class=\\\"container my-3\\\">\\n            <img src=\\\"{{ urlapi + 'post/image/' + post.image }}\\\" alt=\\\"Imagen Avatar User\\\"\\n            class=\\\"img-fluid\\\">\\n          </div>\\n          <angular-file-uploader\\n            [config]=\\\"afuConfig\\\"\\n            [resetUpload]=resetVar\\n            (ApiResponse)=\\\"ImagenUpload($event)\\\">\\n          </angular-file-uploader>\\n    \\n        </div>\\n  \\n      <input type=\\\"submit\\\" value=\\\"Editar Post\\\" class=\\\"btn btn-success\\\" \\n            [disabled]=\\\"posteditForm.invalid\\\">\\n    </form>\\n  \\n  \\n  \\n  </div>\\n\\n  <ng-template #loading>\\n    Cargando data, por favor espere\\n  </ng-template>\\n  \";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { CategoryService } from '../../services/category.service';\nimport { Post } from 'src/app/models/post';\nimport { urlglobal } from '../../services/apiglobal';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-post-new',\n  templateUrl: './post-new.component.html',\n  styleUrls: ['./post-new.component.css']\n})\nexport class PostNewComponent implements OnInit {\n\n  public page_title: string;\n  public status: string;\n  public post:Post;\n  public identity;\n  public token;\n  public categories;\n  urlapi = urlglobal.url;\n  \n  opcionesfroala: Object = {\n    language: 'es',\n    toolbarButtons: {\n      'moreText': {\n        'buttons': ['bold', 'italic', 'underline', 'strikeThrough', 'paragraphFormat', 'superscript', \n        'fontFamily', 'fontSize', 'textColor', 'backgroundColor', 'inlineClass', 'inlineStyle',\n         'clearFormatting']\n      }\n    }\n  };\n\n  afuConfig = {\n    multiple: false,\n    formatsAllowed: \".jpg,.png, .gig, .jpeg\",\n    maxSize: \"50\",\n    uploadAPI:  {\n      url: this.urlapi + 'post/upload',\n      headers: {\n      \"Authorization\" : this._userService.getToken()\n      }\n    },\n    theme: \"attachPin\",\n    hideProgressBar: false,\n    hideResetBtn: false,\n    hideSelectBtn: false,\n    replaceTexts: {\n      selectFileBtn: 'Select Files',\n      resetBtn: 'Reset',\n      uploadBtn: 'Upload',\n      dragNDropBox: 'Drag N Drop',\n      attachPinBtn: 'Sube Tu Imagen para el POST',\n      afterUploadMsg_success: 'Successfully Uploaded !',\n      afterUploadMsg_error: 'Upload Failed !'\n    }\n  };\n\n  constructor(private _route: Router,\n              private _activeRouter: ActivatedRoute,\n              private _userService: UserService,\n              private _categoryService: CategoryService,\n              private _postService: PostService )\n  {\n    this.page_title = 'Crear un Nuevo Post';\n    this.status = '';\n    this.token = _userService.getToken();\n    this.identity = _userService.getIdentity();\n\n    this.post = new Post(\n      1,\n      this.identity.sub,\n      1,\n      '',\n      '',\n      ''\n    );\n\n    // console.log(this.token );\n    \n  }\n\n  ngOnInit() \n  {\n    this.getCategories();\n  }\n  \n  getCategories()\n  {\n    this._categoryService.getCategories().subscribe(\n      response =>\n      {\n        // console.log(response.categories);\n        this.categories = response.categories;\n      }\n    );\n  }\n\n  newpost(form)\n  { \n    // console.log(this.post);\n    this._postService.create(this.token, this.post).subscribe(\n      response => \n      {\n        if(response.status == 'success')\n        {\n          this.status = response.status;\n          setTimeout(() => {\n            this._route.navigate(['/home']);\n\n          }, 1500);\n        }\n        console.log(response);\n      },\n      error => \n      {\n        console.log(error);\n      }\n    );\n    \n  }\n\n  ImagenUpload(datos)\n  {\n    let image_data = JSON.parse(datos.response);\n    this.post.image = image_data.nameimage;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { Post } from 'src/app/models/post';\nimport { urlglobal } from '../../services/apiglobal';\nimport { UserService } from 'src/app/services/user.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  page_title = 'Home'\n  posts: Post;\n  url;\n  indentity;\n  token;\n  \n  constructor(private _postService: PostService, \n              private _userService: UserService)\n  {\n    this.url = urlglobal.url;\n    this.indentity = _userService.getIdentity();\n    this.token = _userService.getToken();\n  }\n\n  ngOnInit() \n  {\n    this.getPosts();\n  }\n\n  getPosts()\n  {\n    this._postService.getPosts().subscribe(\n      response =>\n      {\n        if(response.status == 'success')\n        {\n          // console.log(response);\n          this.posts = response.posts\n          //console.log(this.posts);\n        }\n      },\n      error => \n      {\n\n      }\n    );\n  }\n\n  deletepost(id)\n  {\n    this._postService.deletePost(this.token, id).subscribe(\n      response => \n      {\n        if(response.status == 'success')\n        {\n          this.getPosts();\n        }\n      },\n      error =>\n      {\n        console.log(\"Error al borrar post\", error);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostService } from '../../services/post.service';\nimport { Post } from 'src/app/models/post';\nimport { urlglobal } from '../../services/apiglobal';\nimport { UserService } from 'src/app/services/user.service';\nimport { map } from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  page_title\n  posts;\n  url;\n  indentity;\n  token;\n\n  iduser;\n\n  constructor(private _activeRoute:ActivatedRoute,\n              private _postService: PostService, \n              private _userService: UserService\n            )\n  {\n   this.iduser = +_activeRoute.snapshot.params.id\n\n   //console.log(this.iduser);\n   \n    this.url = urlglobal.url;\n    this.indentity = _userService.getIdentity();\n    this.token = _userService.getToken();\n\n  \n  }\n\n  \n  ngOnInit() \n  {\n    this.getPosts(this.iduser);\n  }\n\n  getPosts(userId)\n  {\n    this._userService.getPosts(userId).subscribe(\n      response =>\n      {\n        if(response.status == 'success')\n        {\n          // console.log(response);\n          this.posts = response.post\n          //console.log(this.posts);\n\n          this.page_title = `Post de ${this.posts[0].user.name} ${this.posts[0].user.surname}`; \n        }\n      },\n      error => \n      {\n\n      }\n    );\n  }\n\n\n\n}\n","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n  <h1>{{ page_title }}</h1>\\n  <p *ngIf=\\\"status == ''\\\">\\n    Pagina de registro, para que el usuario se registre el la plataforma !!!\\n  </p>\\n\\n  <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n    Usuario creado correctamente. &nbsp; \\n    <a [routerLink]=\\\"[ '/login']\\\">Ingresa Aqui</a>\\n  </div>\\n\\n  <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n    Error al crear el usuario. <br> <small> {{ status }}</small>  &nbsp; \\n  </div>\\n  <!-- Formulario de Registros -->\\n\\n  <form action=\\\"\\\" class=\\\"card p-3 col-md-6 \\\" #registerForm=\\\"ngForm\\\" \\n    (ngSubmit)=\\\"enviarRegistro(registerForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Nombre</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.name\\\" required pattern=\\\"[a-zA-Z]+\\\"/>\\n\\n      <small *ngIf=\\\"name.invalid && name.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n        El name no es valido\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"surname\\\">Apellido</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"surname\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.surname\\\" required pattern=\\\"[a-zA-Z]+\\\"/>\\n\\n      <small *ngIf=\\\"surname.invalid && surname.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          Los Apellidos no son validos\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"email\\\"class=\\\"form-control\\\"  name=\\\"email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"/>\\n\\n      <small *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El email no es valido\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.password\\\" required />\\n\\n      <small *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El password no es valido\\n      </small>\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Registrarme\\\" class=\\\"btn btn-success\\\" \\n          [disabled]=\\\"registerForm.invalid\\\">\\n  </form>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { urlglobal } from './apiglobal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  public url = urlglobal.url;\n\n  constructor(private _http: HttpClient)\n  {\n\n  }\n\n  create(token, post): Observable<any>\n  {\n    // El JSON se rompe porque HTML entities, asi que este metodo limpia esa basura \n    // JJAJAJ basura no es pero casi que no puedo solucionarlo\n    post.content = urlglobal.htmlEntities(post.content);\n\n    let json = JSON.stringify(post);\n    let params = \"json=\"+json;\n                                        \n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                  .set('Authorization', token);\n                                        \n    \n    return this._http.post(this.url + 'post', params, {headers});\n  }\n\n  getPosts(): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n    \n    return this._http.get(this.url + 'post' , {headers});\n  }\n\n  getPost(id): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n    \n    return this._http.get(this.url + 'post/'+ id , {headers});\n  }\n\n  updatepost(token, post, id): Observable<any>\n  {\n    post.content = urlglobal.htmlEntities(post.content);\n    let json = JSON.stringify(post);\n    let params = \"json=\"+json;\n\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                   .set('Authorization', token)\n    \n    return this._http.put(this.url + 'post/'+ id , params, {headers});\n  }\n\n  deletePost(token, id): Observable<any>\n  {\n\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                   .set('Authorization', token)\n    \n    return this._http.delete(this.url + 'post/'+ id , {headers});\n  }\n}\n","export class Post\n{\n    constructor\n    (\n        public id: number,\n        public user_id: number,\n        public category_id: number,\n        public content: string,\n        public image: string,\n        public createdAt: any,\n    ){}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3N0LWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXRlZ29yeS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n<div class=\\\"container-fluid my-3\\\" *ngIf=\\\"category; else loading\\\">\\n  <!-- Cuando la variable post tenga contenido miestre este div -->\\n    \\n    <h1>{{ category.name }}</h1>\\n    <hr>\\n  \\n    <div *ngIf=\\\"posts && posts.length == 0\\\" class=\\\"alert alert-info\\\">\\n      NO hay entradas para este post\\n    </div>\\n\\n    <div class=\\\"card-columns\\\" *ngIf=\\\"posts; else loading\\\">\\n        <article class=\\\"card w-100\\\" *ngFor=\\\"let post of posts\\\">\\n          <div class=\\\"card-header\\\">\\n    \\n            <h3>\\n            <a class=\\\"\\\" \\n             [routerLink]=\\\"[ '/entrada',post.id]\\\" > {{ post.title }}</a> \\n            </h3>\\n          </div>\\n    \\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"post-image\\\" *ngIf=\\\"post.image; else imagenone\\\">\\n              <img [src]=\\\"url +'post/image/' + post.image\\\" [alt]=\\\"post.title\\\" class=\\\"w-100\\\"/>\\n            </div>\\n    \\n            <ng-template class=\\\"post-image\\\" #imagenone>\\n                <img src=\\\"assets/images/noimage.png\\\" alt=\\\"imagen default\\\" class=\\\"w-100\\\">\\n            </ng-template>\\n    \\n    \\n            <!-- Botones -->\\n            <div class=\\\"post-buttons m-3\\\">\\n              <a [routerLink]=\\\"[ '/entrada',post.id]\\\" class=\\\"mr-2 btn btn-success\\\">Leer</a>\\n              <span *ngIf=\\\"identity && identity.sub == post.user_id\\\">\\n                <a [routerLink]=\\\"[ '/editar-entrada',post.id]\\\" class=\\\"mr-2 btn btn-primary\\\">Editar</a>\\n                <a  class=\\\"btn btn-danger\\\" style=\\\"color: #fff\\\"\\n                data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#modalborrapost'+post.id\\\">Borrar</a>\\n              </span>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"{{ 'modalborrapost'+ post.id}}\\\">\\n              <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                  <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\">Borrar Post</h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                  </div>\\n                  <div class=\\\"modal-body\\\">\\n                    <p>¿ Está seguro que quiere eliminar el post ?<br/></p>\\n                      <h5><b>\\\"{{  post.title }}\\\"</b></h5>\\n                       \\n                  </div>\\n                  <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\"\\n                     (click)=\\\"deletepost(post.id)\\\">\\n                      Borrar Post\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n        </article>\\n    \\n        \\n      </div>\\n</div>\\n\\n<ng-template #loading>\\n  Cargando..\\n</ng-template>\\n  \\n  \\n  \\n  \";","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Category } from '../../models/categoty';\nimport { CategoryService } from '../../services/category.service';\n\n@Component({\n  selector: 'app-category-new',\n  templateUrl: './category-new.component.html',\n  styleUrls: ['./category-new.component.css']\n})\nexport class CategoryNewComponent implements OnInit {\n\n\n  page_title = 'Crear Nueva Categoria';\n  identity;\n  token;\n  category: Category;\n  status = '';\n\n  constructor(\n    private _userService: UserService,\n    private _categoryService: CategoryService,\n    private _router: Router,\n    private _activateroute: ActivatedRoute\n    )\n  {\n    this.identity = _userService.getIdentity();\n    this.token = _userService.getToken();\n\n    this.category = new Category(1,'');\n  }\n\n  ngOnInit()\n  {\n\n  }\n\n  enviarnewCategoria(form)\n  {\n    console.log(this.category);\n    this._categoryService.addnewCategory(this.token ,this.category).subscribe(\n      response => \n      {\n        this.status = response.status;\n        // console.log(\"HABEr\", response);\n\n        setTimeout(() => {\n          this._router.navigate(['/home']);\n        }, 1500);\n      },\n      error =>\n      {\n\n      }\n    \n    );\n  }\n}\n","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n  <h1>{{ page_title }}</h1>\\n  <p *ngIf=\\\"status == ''\\\">\\n    Pagina de registro, para que el usuario se registre el la plataforma !!!\\n  </p>\\n\\n  <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n    Bienvenido. &nbsp; \\n  </div>\\n\\n  <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n    Error al entrar <br> <small> {{ status }}</small>  &nbsp; \\n  </div> \\n\\n  <!-- Formulario de Registros -->\\n\\n  <form action=\\\"\\\" class=\\\"card p-3 col-md-6 \\\" #loginForm=\\\"ngForm\\\" \\n    (ngSubmit)=\\\"enviarLogin(loginForm)\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"email\\\"class=\\\"form-control\\\"  name=\\\"email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"/>\\n\\n      <small *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El email no es valido\\n      </small>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.password\\\" required />\\n\\n      <small *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El password no es valido\\n      </small>\\n    </div>\\n\\n    <input type=\\\"submit\\\" value=\\\"Registrarme\\\" class=\\\"btn btn-success\\\" \\n          [disabled]=\\\"loginForm.invalid\\\"/>\\n\\n  </form>\\n</div>\";","import { Injectable } from '@angular/core';\nimport {CanActivate, Router } from '@angular/router';\nimport { UserService } from './services/user.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdentityGuard implements  CanActivate{\n\n  constructor(private _router:Router,\n    private _userService: UserService)\n  {\n\n  }\n  canActivate()\n  {\n    let identity = this._userService.getIdentity();\n\n    if(identity)\n    {\n      return true;\n    }\n    else\n    {\n      this._router.navigate(['/error']);\n      return true;\n    }\n  }\n  \n}\n","// Clases Nesesarias de Angular\nimport { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\nimport { UserEditComponent } from './components/user-edit/user-edit.component';\nimport { CategoryNewComponent } from './components/category-new/category-new.component';\nimport { PostNewComponent } from './components/post-new/post-new.component';\nimport { PostDetailComponent } from './components/post-detail/post-detail.component';\nimport { PostEditComponent } from './components/post-edit/post-edit.component';\nimport { CategoryDetailComponent } from './components/category-detail/category-detail.component';\nimport { IdentityGuard } from './identity.guard';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n\nconst ROUTES: Routes = [\n    {path: '', component: HomeComponent},\n    {path: 'home', component: HomeComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'logout/:sure', component: LoginComponent},\n    {path: 'home', component: HomeComponent},\n    {path: 'ajustes', component: UserEditComponent, canActivate: [IdentityGuard]},\n    {path: 'crear-categoria', component: CategoryNewComponent,canActivate: [IdentityGuard]},\n    {path: 'crear-post', component: PostNewComponent,canActivate: [IdentityGuard]},\n    {path: 'entrada/:id', component: PostDetailComponent},\n    {path: 'editar-entrada/:id', component: PostEditComponent,canActivate: [IdentityGuard]},\n    {path: 'registro', component: RegisterComponent},\n    {path: 'perfil/:id', component: ProfileComponent},\n    {path: 'categoria/:id', component: CategoryDetailComponent},\n    {path: 'categorias', component: CategoriasComponent},\n    {path: 'error', component: ErrorComponent},\n    {path: '**', component: ErrorComponent},\n];\n\nexport const APPROUTINGPROVIDERS: any[]= [];\nexport const ROUTING: ModuleWithProviders<any> = RouterModule.forRoot(ROUTES, { relativeLinkResolution: 'legacy' });\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Post } from '../../models/post';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-post-detail',\n  templateUrl: './post-detail.component.html',\n  styleUrls: ['./post-detail.component.css']\n})\nexport class PostDetailComponent implements OnInit {\n\n  post:Post;\n  \n  constructor(private _userService: UserService,\n              private _http: HttpClient,\n              private _postService: PostService ,\n              private _route: Router,\n              private _activeRoute: ActivatedRoute)\n  {\n\n  }\n\n  ngOnInit() \n  {\n    this.getPost();\n  }\n\n  getPost()\n  {\n    this._activeRoute.params.subscribe(\n      response => \n      {\n        let id = +response['id'];\n        //console.log(id);\n        this._postService.getPost(id).subscribe(\n          data => \n          {\n            if(data.status == 'success')\n            {\n              this.post = data.posts;\n              //console.log(data.posts);\n            }\n            else\n            {\n              this._route.navigate(['home']);\n            }\n            \n          },\n          error=> \n          {\n            this._route.navigate(['home']);\n           // console.log(error);\n          }\n        );\n      }\n    );\n\n  }\n}\n","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { UserService } from './services/user.service';\nimport { urlglobal } from './services/apiglobal';\nimport { CategoryService } from './services/category.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, DoCheck{\n \n  title = 'blog-angular';\n  identity: any;\n  token: any;\n  urlapi = urlglobal.url;\n  categories;\n\n\n  constructor(public _userService: UserService,\n            private _categoryServie: CategoryService)\n  {\n    this.loadUser();\n  }\n\n  ngDoCheck()\n  {\n    // Cada vez que se produsca un cambio este metodo se llama\n    // Y yo juraba que era el Onchangues\n    this.loadUser();\n\n  }\n  ngOnInit()\n  {\n    this.getCategories();\n  }\n\n  loadUser()\n  {\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken(); \n  }\n\n  getCategories()\n  {\n    this._categoryServie.getCategories().subscribe(\n      response => \n      {\n        if (response.status == 'success') \n        {\n          this.categories = response.categories;\n          //console.log(this.categories);\n        }\n      },\n      error =>\n      {\n        console.log(\"Error al cargar categories\", error);\n      }\n    );\n  }\n\n}\n","export class Category\n{\n    constructor\n    (\n        public id: number,\n        public name: string\n    ){}\n}\n","export default \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary mt-3\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"assets/images/angular.png\\\" width=\\\"40\\\" height=\\\"40\\\" alt=\\\"logo NG-Blog\\\"/>\\n      NG-BLOG\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" \\n            data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" \\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/home' ]\\\">Inicio <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\"\\n             role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n             Categorias\\n             <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                <a *ngFor=\\\"let category of categories\\\" class=\\\"dropdown-item\\\" \\n                [routerLink]=\\\"['categoria', category.id]\\\">\\n                  {{ category.name}}\\n                </a>\\n              </div>\\n            </a>\\n        </li>\\n      </ul>\\n\\n      <ul class=\\\"navbar-nav navbar-right\\\" *ngIf=\\\"!identity\\\">\\n          <li class=\\\"nav-item active\\\" routerLinkActive=\\\"active\\\">\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/login' ]\\\">Login</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n              <a class=\\\"nav-link\\\"[routerLink]=\\\"[ '/registro' ]\\\">Registro</a>\\n            </li>\\n      </ul>\\n\\n      <ul class=\\\"navbar-nav navbar-right\\\" *ngIf=\\\"identity && identity.name\\\">\\n          <li *ngIf=\\\"identity && identity.userall.image\\\" class=\\\"nav-item\\\">\\n              <div class=\\\"avatar_mask m-0 p-0 \\\">\\n                  <img src=\\\"{{ urlapi + 'user/avatar/' + identity.userall.image }}\\\" \\n                  alt=\\\"Imagen Avatar User\\\">\\n              </div>\\n            </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\"\\n           role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            {{ identity.name  + ' '+ identity.surname}}\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/crear-post']\\\">Crear post</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/crear-categoria']\\\">Crear categoria</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/perfil', identity.sub]\\\">Mi perfil</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"[ '/ajustes']\\\">Ajustes</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"[ '/logout/1']\\\">Salir</a>\\n          </div>\\n        </li>\\n      </ul>\\n  \\n    </div>\\n  </nav>\\n\\n  <router-outlet></router-outlet>\\n  \\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit\n{\n  page_title = \"Loggeate\"\n  user: User;\n  status = '';\n  token:string;\n  identity: string;\n\n  constructor(private _userService: UserService,\n              private _router: Router,\n              private _activateroute: ActivatedRoute)\n  {\n    this.user = new User(1,'','','ROLE_USER','','','','');\n  }\n\n  ngOnInit()\n  {\n    // Sse ejecuta cuando cargo este componente, y cierra sesion cuando \n    // le llega el parametro por la URL osea un 1\n    this.logout();\n  }\n  \n  enviarLogin(form)\n  {\n    this._userService.signup(this.user).subscribe(\n      response => \n      {\n\n        if(response.status == 'error')\n        {\n          this.status = 'Contraseña o Password Incorrectos';\n          return\n        }\n\n        console.log(\"RSA\",response);\n\n        // Token\n        this.status = 'success';\n        this.token = response;\n\n        this._userService.signup(this.user, true).subscribe(\n          response => \n          {\n            console.log(\"RSA\",response);\n            // User information\n            this.identity = response;\n\n            console.log(\"toke\", this.token);\n            console.log(\"User identidaD\", this.identity);\n\n            // PERSISTIR DATOS\n\n            localStorage.setItem('token', this.token);\n            localStorage.setItem('identity', JSON.stringify(this.identity));\n            \n            // Redireccion a INICIO\n            this._router.navigate(['home']);\n\n          },\n            error =>\n          {\n            console.log(\"Error\" , error);\n            this.status = 'error';  \n          }\n        );\n          \n      },\n        error =>\n      {\n        console.log(\"Error1\" , error);\n        this.status = 'error';  \n      }\n    );\n  }\n\n  logout()\n  {\n    this._activateroute.params.subscribe(dato=>{\n      let logout = +dato['sure'];\n      // Con el ma antes de dato lo convierto a int\n\n      if(logout == 1)\n      {\n        localStorage.removeItem('identity');\n        localStorage.removeItem('token');\n\n        this.identity = null;\n        this.token = null;\n\n        // Redireccion a INICIO\n\n        this._router.navigate(['home']);\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  \n  page_title = 'Registrate';\n  user: User;\n  status = '';\n\n  constructor(private _userService: UserService)\n  {\n    console.log(this.status);\n    \n    this.user = new User(1,'','','ROLE_USER','','','','');\n  }\n\n  enviarRegistro(form)\n  {\n    // console.log(this.user);\n  \n    this._userService.register(this.user).subscribe(\n      response =>\n      {\n        // console.log(\"databack\",response);\n        this.status = 'success';\n        form.reset(); \n      },\n      error =>\n      {\n        //console.log(\"HYA UN ERROR\" , error);\n        let emailcheck = error.error.nameerror.email.length;\n        if(emailcheck)\n        {\n        // console.log(\"El email ya existe\");\n        this.status = 'El email ya existe';\n        } \n      }\n    );\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export var urlglobal =\n{\n    url: 'https://apiblogalexsk88.herokuapp.com/api/',\n    htmlEntities: function (str) {\n        return String(str).replace('&ntilde;', 'ñ')\n                          .replace('&Ntilde;', 'Ñ')\n                          .replace('&amp;', '&')\n                          .replace('&Ntilde;', 'Ñ')\n                          .replace('&ntilde;', 'ñ')\n                          .replace('&Ntilde;', 'Ñ')\n                          .replace('&Agrave;', 'À')\n                          .replace('&Aacute;', 'Á')  \n                          .replace('&Acirc;','Â')\n                          .replace('&Atilde;','Ã')   \n                          .replace('&Auml;','Ä')\n                          .replace('&Aring;','Å')\n                          .replace('&AElig;','Æ')\n                          .replace('&Ccedil;','Ç')\n                          .replace('&Egrave;','È')\n                          .replace('&Eacute;','É')\n                          .replace('&Ecirc;', 'Ê')\n                          .replace('&Euml;','Ë')\n                          .replace(   '&Igrave;', 'Ì')\n                          .replace('&Iacute;', 'Í'    )\n                          .replace('&Icirc;', 'Î' )\n                          .replace(   '&Iuml;', 'Ï')\n                          .replace(   '&ETH;', 'Ð')\n                          .replace(   '&Ntilde;', 'Ñ')\n                          .replace(   '&Ograve;', 'Ò')\n                          .replace(   '&Oacute;', 'Ó')\n                          .replace('&Ocirc;', 'Ô' )\n                          .replace(   '&Otilde;', 'Õ')\n                          .replace('&Ouml;', 'Ö'  )\n                          .replace('&Oslash;', 'Ø'    )\n                          .replace(   '&Ugrave;' ,'Ù')\n                          .replace(   '&Uacute;', 'Ú')\n                          .replace(   '&Ucirc;', 'Û')\n                          .replace(   '&Uuml;', 'Ü')\n                          .replace(   '&Yacute;', 'Ý')\n                          .replace('&THORN;', 'Þ' )\n                          .replace(   '&szlig;', 'ß')\n                          .replace(   '&agrave;', 'à')\n                          .replace(   '&aacute;', 'á')\n                          .replace(   '&acirc;', 'â')\n                          .replace(   '&atilde;', 'ã')\n                          .replace('&auml;', 'ä'  )\n                          .replace(   '&aring;', 'å')\n                          .replace(   '&aelig;', 'æ')\n                          .replace(   '&ccedil;', 'ç')\n                          .replace('&egrave;', 'è'    )\n                          .replace('&eacute;', 'é'    )\n                          .replace('&ecirc;', 'ê' )\n                          .replace('&euml;', 'ë'  )\n                          .replace(   '&igrave;', 'ì')\n                          .replace('&iacute;', 'í'    )\n                          .replace('&icirc;', 'î' )\n                          .replace('&iuml;', 'ï'  )\n                          .replace('&eth;', 'ð'   )\n                          .replace(   '&ntilde;', 'ñ')\n                          .replace('&ograve;','ò')\n                          .replace('&oacute;','ó')\n                          .replace('&ocirc;','ô')\n                          .replace('&otilde;','õ')\n                          .replace('&ouml;','ö')\n                          .replace('&oslash;','ø')\n                          .replace('&ugrave;','ù')\n                          .replace('&uacute;','ú')\n                          .replace('&ucirc;','û')\n                          .replace('&uuml;' , 'ü')   \n                          .replace('&yacute;', 'ý')  \n                          .replace('&thorn;', 'þ')\n                          .replace('&yuml;', 'ÿ')\n                          .replace('&nbsp;', '')\n                          .replace('&', '')\n                          .replace('nbsp;', '');\n      }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n// FROALA EDITOR\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\nimport 'froala-editor/js/plugins.pkgd.min.js';\n\n// File UpLoader\nimport { AngularFileUploaderModule } from \"angular-file-uploader\";\n\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ROUTING, APPROUTINGPROVIDERS } from './app.routes';\nimport { HomeComponent } from './components/home/home.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserEditComponent } from './components/user-edit/user-edit.component';\nimport { CategoryNewComponent } from './components/category-new/category-new.component';\nimport { PostNewComponent } from './components/post-new/post-new.component';\nimport { ImagenonePipe } from './pipes/imagenone.pipe';\nimport { PostDetailComponent } from './components/post-detail/post-detail.component';\nimport { PostEditComponent } from './components/post-edit/post-edit.component';\nimport { CategoryDetailComponent } from './components/category-detail/category-detail.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ErrorComponent,\n    CategoriasComponent,\n    UserEditComponent,\n    CategoryNewComponent,\n    PostNewComponent,\n    ImagenonePipe,\n    PostDetailComponent,\n    PostEditComponent,\n    CategoryDetailComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ROUTING,\n    HttpClientModule,\n    FroalaEditorModule.forRoot(),\n    FroalaViewModule.forRoot(),\n    AngularFileUploaderModule\n  ],\n  providers: [\n    APPROUTINGPROVIDERS\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXRlZ29yaWFzLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { urlglobal } from './apiglobal';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  url = urlglobal.url;\n  token: string;\n\n  constructor(private http:HttpClient)\n  {\n\n  }\n\n  addnewCategory(token, category): Observable<any>\n  {\n    let json = JSON.stringify(category);\n    // El backend solo lee un String, \n    // y pues ese string se codifica a JSON en el backend\n\n    let params = 'json='+json;\n    // key: json \n    // value de json de user\n    // COMO EN POSTMAN !! WUUAO\n        \n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                   .set('Authorization', token);\n    // Indico las cabecera \n\n    return this.http.post(this.url+'category',params, {headers: headers});\n\n  }\n\n  getCategories(): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type', 'aplication/x-www-form-urlencoded')\n    \n    return this.http.get(this.url +'category', {headers})\n  }\n  \n  getCategory(id): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type', 'aplication/x-www-form-urlencoded')\n    \n    return this.http.get(`${this.url}category/${id}`, {headers})\n  }\n\n  getPosts(id): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type', 'aplication/x-www-form-urlencoded')\n    \n    return this.http.get(`${this.url}post/category/${id}`, {headers})\n  }\n  \n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Pipe({\n  name: 'imagenone'\n})\nexport class ImagenonePipe implements PipeTransform {\n\n  url = 'assets/image/noimage.png';\n  constructor(private _http:HttpClient)\n  {\n    \n  }\n\n  transform(value: any, args?: any): any \n  {\n    return true\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlcnJvci5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXRlZ29yeS1uZXcuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<h1>{{ page_title }}</h1>\\n<p>\\n  categorias works!\\n</p>\\n\";","export default \"<h1>{{ page_title }}</h1>\\n<p>\\n  error works!\\n</p>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoryService } from '../../services/category.service';\nimport { urlglobal } from '../../services/apiglobal';\nimport { UserService } from '../../services/user.service';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-category-detail',\n  templateUrl: './category-detail.component.html',\n  styleUrls: ['./category-detail.component.css']\n})\nexport class CategoryDetailComponent implements OnInit \n{\n  public page_title;\n  public category;\n  public posts;\n  public url;\n  public identity;\n  public token;\n\n  constructor(private _activeRoute: ActivatedRoute,\n              private _categoryService: CategoryService,\n              private _userService: UserService,\n              private _postService: PostService)\n  {\n    this.url = urlglobal.url    \n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n\n  }\n  ngOnInit()\n  {\n    this.getPostByCategory();   \n  }\n\n  getPostByCategory()\n  {\n      this._activeRoute.params.subscribe(\n        data =>\n        {\n          let id = +data['id'];\n  \n          this._categoryService.getCategory(id).subscribe(\n            response =>\n            {\n              if (response.status == 'success')\n              {\n                this.category = response.category\n                //console.log(response); \n                //console.log(this.category.id);\n                console.log(this.identity.sub);\n                console.log(this.category.user_id);\n              }\n            },\n            error => console.log(error)  \n          )        \n\n          this._categoryService.getPosts(id).subscribe(\n            response =>\n            {\n              if (response.status == 'success')\n              {\n                console.log(\"Aui postbycategory\", response.post);\n                this.posts = response.post\n              }\n            },error => console.log('Error', error)\n            \n          )\n        }\n      )\n  }\n\n  deletepost(id)\n  {\n    this._postService.deletePost(this.token, id).subscribe(\n      response => \n      {\n        if(response.status == 'success')\n        {\n          this.getPostByCategory();\n        }\n      },\n      error =>\n      {\n        console.log(\"Error al borrar post\", error);\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { urlglobal } from './apiglobal';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService \n{\n  url: string;\n  token: string;\n  identity: any;\n\n  constructor(public http: HttpClient)\n  {\n    this.url = urlglobal.url;\n  }\n  \n  register(user): Observable<any>\n  {\n    let json = JSON.stringify(user);\n    // El backend solo lee un String, \n    // y pues ese string se codifica a JSON en el backend\n\n    let params = 'json='+json;\n    // key: json \n    // value de json de user\n    // COMO EN POSTMAN !! WUUAO\n        \n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded');\n    // Indico las cabecera \n\n    return this.http.post(this.url+'register',params, {headers: headers});\n\n  }\n\n  signup(user, gettoken = null): Observable<any>\n  {\n    if(gettoken != null)\n    {\n      user.getToken = 'true';\n    }\n\n    let json = JSON.stringify(user);\n    let params = 'json='+json;\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded');\n  \n    return this.http.post(this.url+'login',params, {headers: headers});\n  }\n\n  updateuser(token, user): Observable<any>\n  {\n    user.description = urlglobal.htmlEntities(user.description);\n    let json = JSON.stringify(user);\n    // Lo convierto a string para enviarlo al API\n\n    let params = \"json=\"+json;\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                   .set('Authorization', token);\n\n    return this.http.put(this.url+'user/update',params,{headers: headers});\n\n  }\n\n  getIdentity()\n  {\n    let identity = JSON.parse(localStorage.getItem('identity'));\n\n    if(identity && identity != \"undefined\")\n    {\n      this.identity = identity;\n    }\n    else\n    {\n      this.identity = null;\n    }\n    return this.identity;\n  }\n\n  getToken()\n  {\n    let token =localStorage.getItem('token');\n\n    if(token && token != \"undefined\")\n    {\n      this.token = token;\n    }\n    else \n    {\n      this.token = null;\n    }\n\n    return this.token;\n  }\n\n  traerUser(id): Observable<any>\n  {\n    return this.http.get(this.url+'user/detail/'+id);\n  }\n\n  getPosts(id): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type', 'aplication/x-www-form-urlencoded')\n    \n    return this.http.get(`${this.url}post/user/${id}`, {headers})\n  }\n}\n","export default \"<div class=\\\"container my-5\\\">\\n  <h1>{{ page_title }}</h1>\\n  <hr><br>\\n\\n  <div class=\\\"card my-2\\\" *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"card-header\\\">\\n        <h2>{{ post.title }}</h2>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-10\\\">\\n              <div class=\\\" mb-0\\\">\\n                  <p [innerHTML]=\\\"post.content\\\"></p>\\n                  <footer class=\\\"blockquote-footer\\\">Por \\n                    <cite title=\\\"Source Title\\\">{{ post.user.name + ' '+ post.user.surname }}</cite></footer>\\n                  </div>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n            <img src=\\\"{{ url + 'post/image/'+post.image }}\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PostService } from '../../services/post.service';\nimport { UserService } from '../../services/user.service';\nimport { Post } from 'src/app/models/post';\nimport { urlglobal } from '../../services/apiglobal';\nimport { CategoryService } from '../../services/category.service';\n\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent implements OnInit {\n\n  public token:string;\n  public identity:string;\n\n  public page_title:string;\n  public post: Post;\n  public status: string;\n  urlapi = urlglobal.url;\n  public categories;\n  public id;\n\n  opcionesfroala: Object = {\n    language: 'es',\n    toolbarButtons: {\n      'moreText': {\n        'buttons': ['bold', 'italic', 'underline', 'strikeThrough', 'paragraphFormat', 'superscript', \n        'fontFamily', 'fontSize', 'textColor', 'backgroundColor', 'inlineClass', 'inlineStyle',\n         'clearFormatting']\n      }\n    }\n  };\n\n  afuConfig = {\n    multiple: false,\n    formatsAllowed: \".jpg,.png, .gig, .jpeg\",\n    maxSize: \"50\",\n    uploadAPI:  {\n      url: this.urlapi + 'post/upload',\n      headers: {\n      \"Authorization\" : this._userService.getToken()\n      }\n    },\n    theme: \"attachPin\",\n    hideProgressBar: false,\n    hideResetBtn: false,\n    hideSelectBtn: false,\n    replaceTexts: {\n      selectFileBtn: 'Select Files',\n      resetBtn: 'Reset',\n      uploadBtn: 'Upload',\n      dragNDropBox: 'Drag N Drop',\n      attachPinBtn: 'Sube Tu Imagen para el POST',\n      afterUploadMsg_success: 'Successfully Uploaded !',\n      afterUploadMsg_error: 'Upload Failed !'\n    }\n  };\n\n  constructor(private _activeRoute: ActivatedRoute,\n              private _postService: PostService,\n              private _userService: UserService,\n              private _categoryService:CategoryService,\n              private _router:Router\n)\n  {\n    this.token = _userService.getToken();\n    this.identity = _userService.getIdentity();\n    this.page_title = 'Editar Post';\n    this.status = '';\n\n    \n\n    this._activeRoute.params.subscribe(\n      data =>\n      {\n        this.id = +data['id'];\n\n        _postService.getPost(this.id).subscribe(\n          response => \n          {\n            if (response.status == 'success')\n            {\n              //console.log(response.posts);\n              delete response.posts['user']\n              this.post = response.posts;\n              \n              let userid = + this.post.user_id;\n              // Comprobar si el dueño del POST, para editar\n              // Toco casting a int porque son string, pues eso dice el EDITOR\n              if(userid != +this.identity.sub)\n              {\n                this._router.navigate(['/home']);\n              }\n\n            }\n          },\n          error => \n          {\n\n          }\n        );\n      }\n    );\n\n  }\n\n  ngOnInit()\n  {\n    this.getCategories()\n  }\n\n  editpost(form){\n    console.log(this.post);\n    this._postService.updatepost(this.token,this.post,this.id).subscribe(\n      response =>\n      {\n        if (response.status == 'success')\n        {\n          this.status = response.status;\n        }\n      },\n      error => \n      {\n        console.log(error);\n      }\n    );\n    \n  }\n\n  getCategories()\n  {\n    this._categoryService.getCategories().subscribe(\n      response =>\n      {\n        // console.log(response.categories);\n        this.categories = response.categories;\n      }\n    );\n  }\n\n  ImagenUpload(datos)\n  {\n    let image_data = JSON.parse(datos.response);\n    this.post.image = image_data.nameimage;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3N0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n<div class=\\\"container-fluid my-3\\\" *ngIf=\\\"posts\\\">\\n<!-- Cuando la variable post tenga contenido miestre este div -->\\n  \\n  <h1>{{ page_title }}</h1>\\n  <hr>\\n\\n  <div class=\\\"card-columns\\\">\\n    <article class=\\\"card w-100\\\" *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"card-header\\\">\\n\\n        <h3>\\n        <a class=\\\"\\\" \\n         [routerLink]=\\\"[ '/entrada',post.id]\\\" > {{ post.title }}</a> \\n        </h3>\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"post-image\\\" *ngIf=\\\"post.image; else imagenone\\\">\\n          <img [src]=\\\"url +'post/image/' + post.image\\\" [alt]=\\\"post.title\\\" class=\\\"w-100\\\"/>\\n        </div>\\n\\n        <ng-template class=\\\"post-image\\\" #imagenone>\\n            <img src=\\\"assets/images/noimage.png\\\" alt=\\\"imagen default\\\" class=\\\"w-100\\\">\\n        </ng-template>\\n\\n\\n        <!-- Botones -->\\n        <div class=\\\"post-buttons m-3\\\">\\n          <a [routerLink]=\\\"[ '/entrada',post.id]\\\" class=\\\"mr-2 btn btn-success\\\">Leer</a>\\n          <span *ngIf=\\\"indentity && indentity.sub == post.user_id\\\">\\n            <a [routerLink]=\\\"[ '/editar-entrada',post.id]\\\" class=\\\"mr-2 btn btn-primary\\\">Editar</a>\\n            <a  class=\\\"btn btn-danger\\\" style=\\\"color: #fff\\\"\\n            data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#modalborrapost'+post.id\\\">Borrar</a>\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"{{ 'modalborrapost'+ post.id}}\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Borrar Post</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <p>¿ Está seguro que quiere eliminar el post ?<br/></p>\\n                  <h5><b>\\\"{{  post.title }}\\\"</b></h5>\\n                   \\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\"\\n                 (click)=\\\"deletepost(post.id)\\\">\\n                  Borrar Post\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n    </article>\\n\\n    \\n  </div>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"!posts\\\">\\n  Cargando..\\n</div>\\n\\n\\n\";","export default \"<div class=\\\"col-md-12\\\" *ngIf=\\\"post; else loading\\\">\\n  <h1>{{ post.title }}</h1>\\n  <hr>\\n  \\n  <p>\\n    {{ post.category.name }} - <a [routerLink]=\\\"[ '/perfil', post.user.id ]\\\">\\n      {{ post.user.name + \\\" \\\" + post.user.surname }}\\n    </a>\\n  </p>\\n  <hr>\\n<!-- \\n  Pintar HTML sin etiquetas\\n  Hay que utilizar una propiedad de Angular llamada [innerHTML]=\\\"aqui la variable\\\" -->\\n\\n  <p [innerHTML]=\\\"post.content\\\"></p>\\n</div>\\n\\n<ng-template #loading>\\n    <div class=\\\"col-md-12\\\">\\n      Cargando...\\n    </div>\\n</ng-template>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}