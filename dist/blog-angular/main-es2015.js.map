{"version":3,"sources":["./src/app/components/categorias/categorias.component.ts","./src/app/components/post-new/post-new.component.css","./src/app/components/home/home.component.css","./src/app/components/user-edit/user-edit.component.ts","./src/app/models/user.ts","./src/app/components/category-new/category-new.component.html","./src/app/components/user-edit/user-edit.component.html","./src/app/components/error/error.component.ts","./src/app/components/post-new/post-new.component.html","./src/app/components/post-edit/post-edit.component.html","./src/app/app.component.css","./src/environments/environment.ts","./src/app/components/post-new/post-new.component.ts","./src/app/components/home/home.component.ts","./src/app/components/profile/profile.component.ts","./src/app/components/register/register.component.html","./src/app/services/post.service.ts","./src/app/models/post.ts","./src/app/components/post-detail/post-detail.component.css","./src/app/components/category-detail/category-detail.component.css","./src/app/components/category-detail/category-detail.component.html","./src/app/components/category-new/category-new.component.ts","./src/app/components/login/login.component.html","./src/app/identity.guard.ts","./src/app/app.routes.ts","./src/app/components/post-detail/post-detail.component.ts","./src/app/app.component.ts","./src/app/models/categoty.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/register/register.component.ts","./src/app/services/apiglobal.ts","./src/app/app.module.ts","./src/app/components/categorias/categorias.component.css","./src/app/components/user-edit/user-edit.component.css","./src/app/services/category.service.ts","./src/app/pipes/imagenone.pipe.ts","./src/app/components/error/error.component.css","./src/app/components/category-new/category-new.component.css","./src/app/components/categorias/categorias.component.html","./src/app/components/error/error.component.html","./src/app/components/category-detail/category-detail.component.ts","./src/app/components/login/login.component.css","./src/app/components/profile/profile.component.css","./src/app/services/user.service.ts","./src/app/components/profile/profile.component.html","./src/app/components/post-edit/post-edit.component.ts","./src/app/components/post-edit/post-edit.component.css","./src/app/components/home/home.component.html","./src/app/components/post-detail/post-detail.component.html","./src/app/components/register/register.component.css","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categorias',\n  templateUrl: './categorias.component.html',\n  styleUrls: ['./categorias.component.css']\n})\nexport class CategoriasComponent implements OnInit {\n\n  page_title = 'Categorias'\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3N0LW5ldy5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { urlglobal } from '../../services/apiglobal'\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit \n{\n\n  page_title = 'Ajustes de Usuario'\n  user: User;\n  identity;\n  token;\n  status = '';\n  urlapi = urlglobal.url;\n\n  loading = true;\n\n  opcionesfroala: Object = {\n    language: 'es',\n    toolbarButtons: {\n      'moreText': {\n        'buttons': ['bold', 'italic', 'underline', 'strikeThrough', 'paragraphFormat', 'superscript', \n        'fontFamily', 'fontSize', 'textColor', 'backgroundColor', 'inlineClass', 'inlineStyle',\n         'clearFormatting']\n      }\n    }\n  };\n\n  afuConfig = {\n    multiple: false,\n    formatsAllowed: \".jpg,.png, .gig, .jpeg\",\n    maxSize: \"50\",\n    uploadAPI:  {\n      url: this.urlapi + 'user/upload',\n      headers: {\n      \"Authorization\" : this._userService.getToken()\n      }\n    },\n    theme: \"attachPin\",\n    hideProgressBar: false,\n    hideResetBtn: false,\n    hideSelectBtn: false,\n    replaceTexts: {\n      selectFileBtn: 'Select Files',\n      resetBtn: 'Reset',\n      uploadBtn: 'Upload',\n      dragNDropBox: 'Drag N Drop',\n      attachPinBtn: 'Sube Tu Avatar de usuario',\n      afterUploadMsg_success: 'Successfully Uploaded !',\n      afterUploadMsg_error: 'Upload Failed !'\n    }\n  };\n\n\n  constructor(private _userService: UserService)\n  {\n    // this.user = new User(1,'','','ROLE_USER','','','','');\n\n    this.identity = _userService.getIdentity();\n    this.token = _userService.getToken();\n\n    this.user = new User(\n      this.identity.userall.id,\n      this.identity.userall.name,\n      this.identity.userall.surname,      \n      this.identity.userall.role,      \n      this.identity.userall.email, \n      '',      \n      this.identity.userall.description,      \n      this.identity.userall.image,      \n    );\n\n    console.log(this.identity.userall);\n    \n\n  }\n\n  ngOnInit() \n  {\n\n  }\n\n  enviarUpdateUser(form)\n  {\n    this._userService.updateuser(this.token, this.user).subscribe(\n    response =>{\n      this.status = \"success\"\n      console.log(\"WELL Update user\", response);\n\n      if(response.status == 'success')\n      {\n        this.identity.userall = this.user;\n        this.identity.name = this.user.name;\n        this.identity.surname = this.user.surname;\n        this.identity.email = this.user.email;\n        console.log(this.identity.userall);\n        console.log(\"toke\",this.identity);\n        \n        localStorage.setItem('identity', JSON.stringify(this.identity));\n      }\n    },\n    error => \n    {\n      console.log(\"Error Update user\", error); \n      this.status = \"Hya un error en algun lado ajjaja arregls\"\n    }\n    );\n  }\n\n  ImagenUpload(datos)\n  {\n     //console.log(\"IMAGEN RTA\", JSON.parse( datos.response));\n     let data = JSON.parse( datos.response);\n     this.user.image = data.imagename;\n  }\n}\n","export class User\n{\n    constructor\n    (\n        public id: number,\n        public name: string,\n        public surname: string,\n        public role: string,\n        public email: string,\n        public password: string,\n        public description: string,\n        public image: string\n    ){}\n}\n","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n    <h1>{{ page_title }}</h1>\\n    <p *ngIf=\\\"status == ''\\\">\\n      Crea una Nueva  <b>CATEGORIA</b>!!!\\n    </p>\\n    <hr/>\\n     \\n    <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n      Categoria Creada correctamente. &nbsp; \\n    </div>\\n  \\n    <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n      Error al crear la categoria. <br> <small> {{ status }}</small>  &nbsp; \\n    </div>\\n  \\n  \\n    <!-- Formulario de Crear Categoria -->\\n\\n   <form #categoryForm=\\\"ngForm\\\" (ngSubmit)=\\\"enviarnewCategoria(categoryForm)\\\"\\n    class=\\\"col-md-5\\\">\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Nombre</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"category.name\\\" required pattern=\\\"[a-zA-Z ]+\\\"/>\\n  \\n        <small *ngIf=\\\"name.invalid && name.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El nombre de la Catedpria no es valido\\n        </small>\\n      </div>\\n\\n      <input type=\\\"submit\\\" value=\\\"Add Categoria\\\" class=\\\"btn btn-success\\\"\\n      [disabled]=\\\"categoryForm.invalid\\\">\\n\\n   </form>\\n  </div>\";","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n  <h1>{{ page_title }}</h1>\\n  <p *ngIf=\\\"status == ''\\\">\\n    Seccion para editar datos de <b>USUARIO</b>!!!\\n  </p>\\n  <hr/>\\n  <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n    Usuario Editado correctamente. &nbsp; \\n  </div>\\n\\n  <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n    Error al editar el Usuario. <br> <small> {{ status }}</small>  &nbsp; \\n  </div>\\n\\n\\n  <!-- Formulario de Ajustes -->\\n\\n  <form  class=\\\"card p-3 col-md-6 \\\" #usereditForm=\\\"ngForm\\\" \\n    (ngSubmit)=\\\"enviarUpdateUser(usereditForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Nombre</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.name\\\" required pattern=\\\"[a-zA-Z]+\\\"/>\\n\\n      <small *ngIf=\\\"name.invalid && name.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n        El name no es valido\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"surname\\\">Apellido</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.surname\\\" required pattern=\\\"[a-zA-Z]+\\\"/>\\n\\n      <small *ngIf=\\\"surname.invalid && surname.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          Los Apellidos no son validos\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"email\\\"class=\\\"form-control\\\"  name=\\\"email\\\"  #email=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"/>\\n\\n      <small *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El email no es valido\\n      </small>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Descripcion</label>\\n      <textarea [(froalaModel)]=\\\"user.description\\\"\\n      [froalaEditor]=\\\"opcionesfroala\\\" type=\\\"text\\\" \\n      name=\\\"description\\\"></textarea>\\n      \\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"image\\\">Avatar</label>\\n      <div *ngIf=\\\"identity && identity.userall.image\\\" class=\\\"container my-3\\\">\\n        <img src=\\\"{{ urlapi + 'user/avatar/' + identity.userall.image }}\\\" alt=\\\"Imagen Avatar User\\\"\\n        class=\\\"img-fluid\\\">\\n      </div>\\n      <angular-file-uploader\\n        [config]=\\\"afuConfig\\\"\\n        [resetUpload]=resetVar\\n        (ApiResponse)=\\\"ImagenUpload($event)\\\">\\n      </angular-file-uploader>\\n      <!-- <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"image\\\"  #image=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.image\\\"  /> -->\\n    </div>\\n\\n    <input type=\\\"submit\\\" value=\\\"Guardar Cambios\\\" class=\\\"btn btn-success\\\" \\n          [disabled]=\\\"usereditForm.invalid\\\">\\n  </form>\\n\\n\\n\\n</div>\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  page_title = 'Pagina No Encontrada'\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n    <h1>{{ page_title }}</h1>\\n    <p *ngIf=\\\"status == ''\\\">\\n        Seccion para Crear POST con un <b>USUARIO</b>!!!\\n    </p>\\n    <hr/>\\n    <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n      Post Creado correctamente. &nbsp; \\n    </div>\\n  \\n    <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n      Error al crear el Post. <br> &nbsp; \\n    </div>\\n  \\n  \\n    <!-- Formulario de Ajustes -->\\n  \\n    <form  class=\\\"card p-3 col-md-6 \\\" #postnewForm=\\\"ngForm\\\" \\n      (ngSubmit)=\\\"newpost(postnewForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Titulo</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"post.title\\\" required />\\n  \\n        <small *ngIf=\\\"title.invalid && title.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El titulo no es Valido\\n        </small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"content\\\">Contenido</label>\\n        <textarea [(froalaModel)]=\\\"post.content\\\"\\n        [(ngModel)]=\\\"post.content\\\"\\n        [froalaEditor]=\\\"opcionesfroala\\\" type=\\\"text\\\" \\n        name=\\\"content\\\" #content=\\\"ngModel\\\" required></textarea>\\n        \\n        <small *ngIf=\\\"content.invalid && content.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n            El contenido es obligatorio\\n        </small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"category_id\\\">Selecciones Categorias</label>\\n          <select class=\\\"form-control\\\" id=\\\"category_id\\\" required\\n          name=\\\"category_id\\\" #category=\\\"ngModel\\\" [(ngModel)]=\\\"post.category_id\\\">\\n            <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n              {{  category.name }}\\n            </option>\\n          </select>\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"image\\\">Imagen Post</label>\\n          <!-- <div *ngIf=\\\"identity && identity.userall.image\\\" class=\\\"container my-3\\\">\\n            <img src=\\\"{{ urlapi + 'user/avatar/' + identity.userall.image }}\\\" alt=\\\"Imagen Avatar User\\\"\\n            class=\\\"img-fluid\\\">\\n          </div> -->\\n          <angular-file-uploader\\n            [config]=\\\"afuConfig\\\"\\n            [resetUpload]=resetVar\\n            (ApiResponse)=\\\"ImagenUpload($event)\\\">\\n          </angular-file-uploader>\\n    \\n        </div>\\n  \\n      <input type=\\\"submit\\\" value=\\\"Crear Post\\\" class=\\\"btn btn-success\\\" \\n            [disabled]=\\\"postnewForm.invalid\\\">\\n    </form>\\n  \\n  \\n  \\n  </div>\";","export default \"<div class=\\\"col-md-12 m-3\\\" *ngIf=\\\"post; else loading\\\">\\n\\n    <h1>{{ page_title }}</h1>\\n    <p *ngIf=\\\"status == ''\\\">\\n        Seccion para Editar POST con un <b>USUARIO</b>!!!\\n    </p>\\n    <hr/>\\n    <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n      Post Editado correctamente. &nbsp; \\n    </div>\\n  \\n    <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n      Error al editar el Post. <br> &nbsp; \\n    </div>\\n  \\n  \\n    <!-- Formulario de Ajustes -->\\n  \\n    <form  class=\\\"card p-3 col-md-6 \\\" #posteditForm=\\\"ngForm\\\" \\n      (ngSubmit)=\\\"editpost(posteditForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Titulo</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"post.title\\\" required />\\n  \\n        <small *ngIf=\\\"title.invalid && title.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El titulo no es Valido\\n        </small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"content\\\">Contenido</label>\\n        <textarea [(froalaModel)]=\\\"post.content\\\"\\n        [(ngModel)]=\\\"post.content\\\"\\n        [froalaEditor]=\\\"opcionesfroala\\\" type=\\\"text\\\" \\n        name=\\\"content\\\" #content=\\\"ngModel\\\" required></textarea>\\n        \\n        <small *ngIf=\\\"content.invalid && content.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n            El contenido es obligatorio\\n        </small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"category_id\\\">Selecciones Categorias</label>\\n          <select class=\\\"form-control\\\" id=\\\"category_id\\\" required\\n          name=\\\"category_id\\\" #category=\\\"ngModel\\\" [(ngModel)]=\\\"post.category_id\\\">\\n            <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n              {{  category.name }}\\n            </option>\\n          </select>\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"image\\\">Imagen Post</label>\\n          <div *ngIf=\\\"post.image\\\" class=\\\"container my-3\\\">\\n            <img src=\\\"{{ urlapi + 'post/image/' + post.image }}\\\" alt=\\\"Imagen Avatar User\\\"\\n            class=\\\"img-fluid\\\">\\n          </div>\\n          <angular-file-uploader\\n            [config]=\\\"afuConfig\\\"\\n            [resetUpload]=resetVar\\n            (ApiResponse)=\\\"ImagenUpload($event)\\\">\\n          </angular-file-uploader>\\n    \\n        </div>\\n  \\n      <input type=\\\"submit\\\" value=\\\"Editar Post\\\" class=\\\"btn btn-success\\\" \\n            [disabled]=\\\"posteditForm.invalid\\\">\\n    </form>\\n  \\n  \\n  \\n  </div>\\n\\n  <ng-template #loading>\\n    Cargando data, por favor espere\\n  </ng-template>\\n  \";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { CategoryService } from '../../services/category.service';\nimport { Post } from 'src/app/models/post';\nimport { urlglobal } from '../../services/apiglobal';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-post-new',\n  templateUrl: './post-new.component.html',\n  styleUrls: ['./post-new.component.css']\n})\nexport class PostNewComponent implements OnInit {\n\n  public page_title: string;\n  public status: string;\n  public post:Post;\n  public identity;\n  public token;\n  public categories;\n  urlapi = urlglobal.url;\n  \n  opcionesfroala: Object = {\n    language: 'es',\n    toolbarButtons: {\n      'moreText': {\n        'buttons': ['bold', 'italic', 'underline', 'strikeThrough', 'paragraphFormat', 'superscript', \n        'fontFamily', 'fontSize', 'textColor', 'backgroundColor', 'inlineClass', 'inlineStyle',\n         'clearFormatting']\n      }\n    }\n  };\n\n  afuConfig = {\n    multiple: false,\n    formatsAllowed: \".jpg,.png, .gig, .jpeg\",\n    maxSize: \"50\",\n    uploadAPI:  {\n      url: this.urlapi + 'post/upload',\n      headers: {\n      \"Authorization\" : this._userService.getToken()\n      }\n    },\n    theme: \"attachPin\",\n    hideProgressBar: false,\n    hideResetBtn: false,\n    hideSelectBtn: false,\n    replaceTexts: {\n      selectFileBtn: 'Select Files',\n      resetBtn: 'Reset',\n      uploadBtn: 'Upload',\n      dragNDropBox: 'Drag N Drop',\n      attachPinBtn: 'Sube Tu Imagen para el POST',\n      afterUploadMsg_success: 'Successfully Uploaded !',\n      afterUploadMsg_error: 'Upload Failed !'\n    }\n  };\n\n  constructor(private _route: Router,\n              private _activeRouter: ActivatedRoute,\n              private _userService: UserService,\n              private _categoryService: CategoryService,\n              private _postService: PostService )\n  {\n    this.page_title = 'Crear un Nuevo Post';\n    this.status = '';\n    this.token = _userService.getToken();\n    this.identity = _userService.getIdentity();\n\n    this.post = new Post(\n      1,\n      this.identity.sub,\n      1,\n      '',\n      '',\n      ''\n    );\n\n    // console.log(this.token );\n    \n  }\n\n  ngOnInit() \n  {\n    this.getCategories();\n  }\n  \n  getCategories()\n  {\n    this._categoryService.getCategories().subscribe(\n      response =>\n      {\n        // console.log(response.categories);\n        this.categories = response.categories;\n      }\n    );\n  }\n\n  newpost(form)\n  { \n    // console.log(this.post);\n    this._postService.create(this.token, this.post).subscribe(\n      response => \n      {\n        if(response.status == 'success')\n        {\n          this.status = response.status;\n          setTimeout(() => {\n            this._route.navigate(['/home']);\n\n          }, 1500);\n        }\n        console.log(response);\n      },\n      error => \n      {\n        console.log(error);\n      }\n    );\n    \n  }\n\n  ImagenUpload(datos)\n  {\n    let image_data = JSON.parse(datos.response);\n    this.post.image = image_data.nameimage;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { Post } from 'src/app/models/post';\nimport { urlglobal } from '../../services/apiglobal';\nimport { UserService } from 'src/app/services/user.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  page_title = 'Home'\n  posts: Post;\n  url;\n  indentity;\n  token;\n  \n  constructor(private _postService: PostService, \n              private _userService: UserService)\n  {\n    this.url = urlglobal.url;\n    this.indentity = _userService.getIdentity();\n    this.token = _userService.getToken();\n  }\n\n  ngOnInit() \n  {\n    this.getPosts();\n  }\n\n  getPosts()\n  {\n    this._postService.getPosts().subscribe(\n      response =>\n      {\n        if(response.status == 'success')\n        {\n          // console.log(response);\n          this.posts = response.posts\n          //console.log(this.posts);\n        }\n      },\n      error => \n      {\n\n      }\n    );\n  }\n\n  deletepost(id)\n  {\n    this._postService.deletePost(this.token, id).subscribe(\n      response => \n      {\n        if(response.status == 'success')\n        {\n          this.getPosts();\n        }\n      },\n      error =>\n      {\n        console.log(\"Error al borrar post\", error);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostService } from '../../services/post.service';\nimport { Post } from 'src/app/models/post';\nimport { urlglobal } from '../../services/apiglobal';\nimport { UserService } from 'src/app/services/user.service';\nimport { map } from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  page_title\n  posts;\n  url;\n  indentity;\n  token;\n\n  iduser;\n\n  constructor(private _activeRoute:ActivatedRoute,\n              private _postService: PostService, \n              private _userService: UserService\n            )\n  {\n   this.iduser = +_activeRoute.snapshot.params.id\n\n   //console.log(this.iduser);\n   \n    this.url = urlglobal.url;\n    this.indentity = _userService.getIdentity();\n    this.token = _userService.getToken();\n\n  \n  }\n\n  \n  ngOnInit() \n  {\n    this.getPosts(this.iduser);\n  }\n\n  getPosts(userId)\n  {\n    this._userService.getPosts(userId).subscribe(\n      response =>\n      {\n        if(response.status == 'success')\n        {\n          // console.log(response);\n          this.posts = response.post\n          //console.log(this.posts);\n\n          this.page_title = `Post de ${this.posts[0].user.name} ${this.posts[0].user.surname}`; \n        }\n      },\n      error => \n      {\n\n      }\n    );\n  }\n\n\n\n}\n","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n  <h1>{{ page_title }}</h1>\\n  <p *ngIf=\\\"status == ''\\\">\\n    Pagina de registro, para que el usuario se registre el la plataforma !!!\\n  </p>\\n\\n  <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n    Usuario creado correctamente. &nbsp; \\n    <a [routerLink]=\\\"[ '/login']\\\">Ingresa Aqui</a>\\n  </div>\\n\\n  <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n    Error al crear el usuario. <br> <small> {{ status }}</small>  &nbsp; \\n  </div>\\n  <!-- Formulario de Registros -->\\n\\n  <form action=\\\"\\\" class=\\\"card p-3 col-md-6 \\\" #registerForm=\\\"ngForm\\\" \\n    (ngSubmit)=\\\"enviarRegistro(registerForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Nombre</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.name\\\" required pattern=\\\"[a-zA-Z]+\\\"/>\\n\\n      <small *ngIf=\\\"name.invalid && name.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n        El name no es valido\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"surname\\\">Apellido</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"surname\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.surname\\\" required pattern=\\\"[a-zA-Z]+\\\"/>\\n\\n      <small *ngIf=\\\"surname.invalid && surname.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          Los Apellidos no son validos\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"email\\\"class=\\\"form-control\\\"  name=\\\"email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"/>\\n\\n      <small *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El email no es valido\\n      </small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.password\\\" required />\\n\\n      <small *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El password no es valido\\n      </small>\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Registrarme\\\" class=\\\"btn btn-success\\\" \\n          [disabled]=\\\"registerForm.invalid\\\">\\n  </form>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { urlglobal } from './apiglobal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  public url = urlglobal.url;\n\n  constructor(private _http: HttpClient)\n  {\n\n  }\n\n  create(token, post): Observable<any>\n  {\n    // El JSON se rompe porque HTML entities, asi que este metodo limpia esa basura \n    // JJAJAJ basura no es pero casi que no puedo solucionarlo\n    post.content = urlglobal.htmlEntities(post.content);\n\n    let json = JSON.stringify(post);\n    let params = \"json=\"+json;\n                                        \n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                  .set('Authorization', token);\n                                        \n    \n    return this._http.post(this.url + 'post', params, {headers});\n  }\n\n  getPosts(): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n    \n    return this._http.get(this.url + 'post' , {headers});\n  }\n\n  getPost(id): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n    \n    return this._http.get(this.url + 'post/'+ id , {headers});\n  }\n\n  updatepost(token, post, id): Observable<any>\n  {\n    post.content = urlglobal.htmlEntities(post.content);\n    let json = JSON.stringify(post);\n    let params = \"json=\"+json;\n\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                   .set('Authorization', token)\n    \n    return this._http.put(this.url + 'post/'+ id , params, {headers});\n  }\n\n  deletePost(token, id): Observable<any>\n  {\n\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                   .set('Authorization', token)\n    \n    return this._http.delete(this.url + 'post/'+ id , {headers});\n  }\n}\n","export class Post\n{\n    constructor\n    (\n        public id: number,\n        public user_id: number,\n        public category_id: number,\n        public content: string,\n        public image: string,\n        public createdAt: any,\n    ){}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3N0LWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXRlZ29yeS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n<div class=\\\"container-fluid my-3\\\" *ngIf=\\\"category; else loading\\\">\\n  <!-- Cuando la variable post tenga contenido miestre este div -->\\n    \\n    <h1>{{ category.name }}</h1>\\n    <hr>\\n  \\n    <div *ngIf=\\\"posts && posts.length == 0\\\" class=\\\"alert alert-info\\\">\\n      NO hay entradas para este post\\n    </div>\\n\\n    <div class=\\\"card-columns\\\" *ngIf=\\\"posts; else loading\\\">\\n        <article class=\\\"card w-100\\\" *ngFor=\\\"let post of posts\\\">\\n          <div class=\\\"card-header\\\">\\n    \\n            <h3>\\n            <a class=\\\"\\\" \\n             [routerLink]=\\\"[ '/entrada',post.id]\\\" > {{ post.title }}</a> \\n            </h3>\\n          </div>\\n    \\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"post-image\\\" *ngIf=\\\"post.image; else imagenone\\\">\\n              <img [src]=\\\"url +'post/image/' + post.image\\\" [alt]=\\\"post.title\\\" class=\\\"w-100\\\"/>\\n            </div>\\n    \\n            <ng-template class=\\\"post-image\\\" #imagenone>\\n                <img src=\\\"assets/images/noimage.png\\\" alt=\\\"imagen default\\\" class=\\\"w-100\\\">\\n            </ng-template>\\n    \\n    \\n            <!-- Botones -->\\n            <div class=\\\"post-buttons m-3\\\">\\n              <a [routerLink]=\\\"[ '/entrada',post.id]\\\" class=\\\"mr-2 btn btn-success\\\">Leer</a>\\n              <span *ngIf=\\\"identity && identity.sub == post.user_id\\\">\\n                <a [routerLink]=\\\"[ '/editar-entrada',post.id]\\\" class=\\\"mr-2 btn btn-primary\\\">Editar</a>\\n                <a  class=\\\"btn btn-danger\\\" style=\\\"color: #fff\\\"\\n                data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#modalborrapost'+post.id\\\">Borrar</a>\\n              </span>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"{{ 'modalborrapost'+ post.id}}\\\">\\n              <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                  <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\">Borrar Post</h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                  </div>\\n                  <div class=\\\"modal-body\\\">\\n                    <p>¿ Está seguro que quiere eliminar el post ?<br/></p>\\n                      <h5><b>\\\"{{  post.title }}\\\"</b></h5>\\n                       \\n                  </div>\\n                  <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\"\\n                     (click)=\\\"deletepost(post.id)\\\">\\n                      Borrar Post\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n        </article>\\n    \\n        \\n      </div>\\n</div>\\n\\n<ng-template #loading>\\n  Cargando..\\n</ng-template>\\n  \\n  \\n  \\n  \";","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Category } from '../../models/categoty';\nimport { CategoryService } from '../../services/category.service';\n\n@Component({\n  selector: 'app-category-new',\n  templateUrl: './category-new.component.html',\n  styleUrls: ['./category-new.component.css']\n})\nexport class CategoryNewComponent implements OnInit {\n\n\n  page_title = 'Crear Nueva Categoria';\n  identity;\n  token;\n  category: Category;\n  status = '';\n\n  constructor(\n    private _userService: UserService,\n    private _categoryService: CategoryService,\n    private _router: Router,\n    private _activateroute: ActivatedRoute\n    )\n  {\n    this.identity = _userService.getIdentity();\n    this.token = _userService.getToken();\n\n    this.category = new Category(1,'');\n  }\n\n  ngOnInit()\n  {\n\n  }\n\n  enviarnewCategoria(form)\n  {\n    console.log(this.category);\n    this._categoryService.addnewCategory(this.token ,this.category).subscribe(\n      response => \n      {\n        this.status = response.status;\n        // console.log(\"HABEr\", response);\n\n        setTimeout(() => {\n          this._router.navigate(['/home']);\n        }, 1500);\n      },\n      error =>\n      {\n\n      }\n    \n    );\n  }\n}\n","export default \"<div class=\\\"col-md-12 m-3\\\">\\n\\n  <h1>{{ page_title }}</h1>\\n  <p *ngIf=\\\"status == ''\\\">\\n    Pagina de registro, para que el usuario se registre el la plataforma !!!\\n  </p>\\n\\n  <div class=\\\"alert alert-success col-md-6\\\" *ngIf=\\\"status == 'success'\\\">\\n    Bienvenido. &nbsp; \\n  </div>\\n\\n  <div class=\\\"alert alert-danger col-md-6\\\" *ngIf=\\\"status != '' && status != 'success'\\\">\\n    Error al entrar <br> <small> {{ status }}</small>  &nbsp; \\n  </div> \\n\\n  <!-- Formulario de Registros -->\\n\\n  <form action=\\\"\\\" class=\\\"card p-3 col-md-6 \\\" #loginForm=\\\"ngForm\\\" \\n    (ngSubmit)=\\\"enviarLogin(loginForm)\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"email\\\"class=\\\"form-control\\\"  name=\\\"email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"/>\\n\\n      <small *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El email no es valido\\n      </small>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"user.password\\\" required />\\n\\n      <small *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"invalid-feedback d-block\\\">\\n          El password no es valido\\n      </small>\\n    </div>\\n\\n    <input type=\\\"submit\\\" value=\\\"Registrarme\\\" class=\\\"btn btn-success\\\" \\n          [disabled]=\\\"loginForm.invalid\\\"/>\\n\\n  </form>\\n</div>\";","import { Injectable } from '@angular/core';\nimport {CanActivate, Router } from '@angular/router';\nimport { UserService } from './services/user.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdentityGuard implements  CanActivate{\n\n  constructor(private _router:Router,\n    private _userService: UserService)\n  {\n\n  }\n  canActivate()\n  {\n    let identity = this._userService.getIdentity();\n\n    if(identity)\n    {\n      return true;\n    }\n    else\n    {\n      this._router.navigate(['/error']);\n      return true;\n    }\n  }\n  \n}\n","// Clases Nesesarias de Angular\nimport { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\nimport { UserEditComponent } from './components/user-edit/user-edit.component';\nimport { CategoryNewComponent } from './components/category-new/category-new.component';\nimport { PostNewComponent } from './components/post-new/post-new.component';\nimport { PostDetailComponent } from './components/post-detail/post-detail.component';\nimport { PostEditComponent } from './components/post-edit/post-edit.component';\nimport { CategoryDetailComponent } from './components/category-detail/category-detail.component';\nimport { IdentityGuard } from './identity.guard';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n\nconst ROUTES: Routes = [\n    {path: '', component: HomeComponent},\n    {path: 'home', component: HomeComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'logout/:sure', component: LoginComponent},\n    {path: 'home', component: HomeComponent},\n    {path: 'ajustes', component: UserEditComponent, canActivate: [IdentityGuard]},\n    {path: 'crear-categoria', component: CategoryNewComponent,canActivate: [IdentityGuard]},\n    {path: 'crear-post', component: PostNewComponent,canActivate: [IdentityGuard]},\n    {path: 'entrada/:id', component: PostDetailComponent},\n    {path: 'editar-entrada/:id', component: PostEditComponent,canActivate: [IdentityGuard]},\n    {path: 'registro', component: RegisterComponent},\n    {path: 'perfil/:id', component: ProfileComponent},\n    {path: 'categoria/:id', component: CategoryDetailComponent},\n    {path: 'categorias', component: CategoriasComponent},\n    {path: 'error', component: ErrorComponent},\n    {path: '**', component: ErrorComponent},\n];\n\nexport const APPROUTINGPROVIDERS: any[]= [];\nexport const ROUTING: ModuleWithProviders<any> = RouterModule.forRoot(ROUTES, { relativeLinkResolution: 'legacy' });\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Post } from '../../models/post';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-post-detail',\n  templateUrl: './post-detail.component.html',\n  styleUrls: ['./post-detail.component.css']\n})\nexport class PostDetailComponent implements OnInit {\n\n  post:Post;\n  \n  constructor(private _userService: UserService,\n              private _http: HttpClient,\n              private _postService: PostService ,\n              private _route: Router,\n              private _activeRoute: ActivatedRoute)\n  {\n\n  }\n\n  ngOnInit() \n  {\n    this.getPost();\n  }\n\n  getPost()\n  {\n    this._activeRoute.params.subscribe(\n      response => \n      {\n        let id = +response['id'];\n        //console.log(id);\n        this._postService.getPost(id).subscribe(\n          data => \n          {\n            if(data.status == 'success')\n            {\n              this.post = data.posts;\n              //console.log(data.posts);\n            }\n            else\n            {\n              this._route.navigate(['home']);\n            }\n            \n          },\n          error=> \n          {\n            this._route.navigate(['home']);\n           // console.log(error);\n          }\n        );\n      }\n    );\n\n  }\n}\n","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { UserService } from './services/user.service';\nimport { urlglobal } from './services/apiglobal';\nimport { CategoryService } from './services/category.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, DoCheck{\n \n  title = 'blog-angular';\n  identity: any;\n  token: any;\n  urlapi = urlglobal.url;\n  categories;\n\n\n  constructor(public _userService: UserService,\n            private _categoryServie: CategoryService)\n  {\n    this.loadUser();\n  }\n\n  ngDoCheck()\n  {\n    // Cada vez que se produsca un cambio este metodo se llama\n    // Y yo juraba que era el Onchangues\n    this.loadUser();\n\n  }\n  ngOnInit()\n  {\n    this.getCategories();\n  }\n\n  loadUser()\n  {\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken(); \n  }\n\n  getCategories()\n  {\n    this._categoryServie.getCategories().subscribe(\n      response => \n      {\n        if (response.status == 'success') \n        {\n          this.categories = response.categories;\n          //console.log(this.categories);\n        }\n      },\n      error =>\n      {\n        console.log(\"Error al cargar categories\", error);\n      }\n    );\n  }\n\n}\n","export class Category\n{\n    constructor\n    (\n        public id: number,\n        public name: string\n    ){}\n}\n","export default \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary mt-3\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"assets/images/angular.png\\\" width=\\\"40\\\" height=\\\"40\\\" alt=\\\"logo NG-Blog\\\"/>\\n      NG-BLOG\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" \\n            data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" \\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/home' ]\\\">Inicio <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\"\\n             role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n             Categorias\\n             <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                <a *ngFor=\\\"let category of categories\\\" class=\\\"dropdown-item\\\" \\n                [routerLink]=\\\"['categoria', category.id]\\\">\\n                  {{ category.name}}\\n                </a>\\n              </div>\\n            </a>\\n        </li>\\n      </ul>\\n\\n      <ul class=\\\"navbar-nav navbar-right\\\" *ngIf=\\\"!identity\\\">\\n          <li class=\\\"nav-item active\\\" routerLinkActive=\\\"active\\\">\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/login' ]\\\">Login</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n              <a class=\\\"nav-link\\\"[routerLink]=\\\"[ '/registro' ]\\\">Registro</a>\\n            </li>\\n      </ul>\\n\\n      <ul class=\\\"navbar-nav navbar-right\\\" *ngIf=\\\"identity && identity.name\\\">\\n          <li *ngIf=\\\"identity && identity.userall.image\\\" class=\\\"nav-item\\\">\\n              <div class=\\\"avatar_mask m-0 p-0 \\\">\\n                  <img src=\\\"{{ urlapi + 'user/avatar/' + identity.userall.image }}\\\" \\n                  alt=\\\"Imagen Avatar User\\\">\\n              </div>\\n            </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\"\\n           role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            {{ identity.name  + ' '+ identity.surname}}\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/crear-post']\\\">Crear post</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/crear-categoria']\\\">Crear categoria</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/perfil', identity.sub]\\\">Mi perfil</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"[ '/ajustes']\\\">Ajustes</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"[ '/logout/1']\\\">Salir</a>\\n          </div>\\n        </li>\\n      </ul>\\n  \\n    </div>\\n  </nav>\\n\\n  <router-outlet></router-outlet>\\n  \\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit\n{\n  page_title = \"Loggeate\"\n  user: User;\n  status = '';\n  token:string;\n  identity: string;\n\n  constructor(private _userService: UserService,\n              private _router: Router,\n              private _activateroute: ActivatedRoute)\n  {\n    this.user = new User(1,'','','ROLE_USER','','','','');\n  }\n\n  ngOnInit()\n  {\n    // Sse ejecuta cuando cargo este componente, y cierra sesion cuando \n    // le llega el parametro por la URL osea un 1\n    this.logout();\n  }\n  \n  enviarLogin(form)\n  {\n    this._userService.signup(this.user).subscribe(\n      response => \n      {\n\n        if(response.status == 'error')\n        {\n          this.status = 'Contraseña o Password Incorrectos';\n          return\n        }\n\n        console.log(\"RSA\",response);\n\n        // Token\n        this.status = 'success';\n        this.token = response;\n\n        this._userService.signup(this.user, true).subscribe(\n          response => \n          {\n            console.log(\"RSA\",response);\n            // User information\n            this.identity = response;\n\n            console.log(\"toke\", this.token);\n            console.log(\"User identidaD\", this.identity);\n\n            // PERSISTIR DATOS\n\n            localStorage.setItem('token', this.token);\n            localStorage.setItem('identity', JSON.stringify(this.identity));\n            \n            // Redireccion a INICIO\n            this._router.navigate(['home']);\n\n          },\n            error =>\n          {\n            console.log(\"Error\" , error);\n            this.status = 'error';  \n          }\n        );\n          \n      },\n        error =>\n      {\n        console.log(\"Error1\" , error);\n        this.status = 'error';  \n      }\n    );\n  }\n\n  logout()\n  {\n    this._activateroute.params.subscribe(dato=>{\n      let logout = +dato['sure'];\n      // Con el ma antes de dato lo convierto a int\n\n      if(logout == 1)\n      {\n        localStorage.removeItem('identity');\n        localStorage.removeItem('token');\n\n        this.identity = null;\n        this.token = null;\n\n        // Redireccion a INICIO\n\n        this._router.navigate(['home']);\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  \n  page_title = 'Registrate';\n  user: User;\n  status = '';\n\n  constructor(private _userService: UserService)\n  {\n    console.log(this.status);\n    \n    this.user = new User(1,'','','ROLE_USER','','','','');\n  }\n\n  enviarRegistro(form)\n  {\n    // console.log(this.user);\n  \n    this._userService.register(this.user).subscribe(\n      response =>\n      {\n        // console.log(\"databack\",response);\n        this.status = 'success';\n        form.reset(); \n      },\n      error =>\n      {\n        //console.log(\"HYA UN ERROR\" , error);\n        let emailcheck = error.error.nameerror.email.length;\n        if(emailcheck)\n        {\n        // console.log(\"El email ya existe\");\n        this.status = 'El email ya existe';\n        } \n      }\n    );\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export var urlglobal =\n{\n    url: 'https://apiblogalexsk88.herokuapp.com/api/',\n    htmlEntities: function (str) {\n        return String(str).replace('&ntilde;', 'ñ')\n                          .replace('&Ntilde;', 'Ñ')\n                          .replace('&amp;', '&')\n                          .replace('&Ntilde;', 'Ñ')\n                          .replace('&ntilde;', 'ñ')\n                          .replace('&Ntilde;', 'Ñ')\n                          .replace('&Agrave;', 'À')\n                          .replace('&Aacute;', 'Á')  \n                          .replace('&Acirc;','Â')\n                          .replace('&Atilde;','Ã')   \n                          .replace('&Auml;','Ä')\n                          .replace('&Aring;','Å')\n                          .replace('&AElig;','Æ')\n                          .replace('&Ccedil;','Ç')\n                          .replace('&Egrave;','È')\n                          .replace('&Eacute;','É')\n                          .replace('&Ecirc;', 'Ê')\n                          .replace('&Euml;','Ë')\n                          .replace(   '&Igrave;', 'Ì')\n                          .replace('&Iacute;', 'Í'    )\n                          .replace('&Icirc;', 'Î' )\n                          .replace(   '&Iuml;', 'Ï')\n                          .replace(   '&ETH;', 'Ð')\n                          .replace(   '&Ntilde;', 'Ñ')\n                          .replace(   '&Ograve;', 'Ò')\n                          .replace(   '&Oacute;', 'Ó')\n                          .replace('&Ocirc;', 'Ô' )\n                          .replace(   '&Otilde;', 'Õ')\n                          .replace('&Ouml;', 'Ö'  )\n                          .replace('&Oslash;', 'Ø'    )\n                          .replace(   '&Ugrave;' ,'Ù')\n                          .replace(   '&Uacute;', 'Ú')\n                          .replace(   '&Ucirc;', 'Û')\n                          .replace(   '&Uuml;', 'Ü')\n                          .replace(   '&Yacute;', 'Ý')\n                          .replace('&THORN;', 'Þ' )\n                          .replace(   '&szlig;', 'ß')\n                          .replace(   '&agrave;', 'à')\n                          .replace(   '&aacute;', 'á')\n                          .replace(   '&acirc;', 'â')\n                          .replace(   '&atilde;', 'ã')\n                          .replace('&auml;', 'ä'  )\n                          .replace(   '&aring;', 'å')\n                          .replace(   '&aelig;', 'æ')\n                          .replace(   '&ccedil;', 'ç')\n                          .replace('&egrave;', 'è'    )\n                          .replace('&eacute;', 'é'    )\n                          .replace('&ecirc;', 'ê' )\n                          .replace('&euml;', 'ë'  )\n                          .replace(   '&igrave;', 'ì')\n                          .replace('&iacute;', 'í'    )\n                          .replace('&icirc;', 'î' )\n                          .replace('&iuml;', 'ï'  )\n                          .replace('&eth;', 'ð'   )\n                          .replace(   '&ntilde;', 'ñ')\n                          .replace('&ograve;','ò')\n                          .replace('&oacute;','ó')\n                          .replace('&ocirc;','ô')\n                          .replace('&otilde;','õ')\n                          .replace('&ouml;','ö')\n                          .replace('&oslash;','ø')\n                          .replace('&ugrave;','ù')\n                          .replace('&uacute;','ú')\n                          .replace('&ucirc;','û')\n                          .replace('&uuml;' , 'ü')   \n                          .replace('&yacute;', 'ý')  \n                          .replace('&thorn;', 'þ')\n                          .replace('&yuml;', 'ÿ')\n                          .replace('&nbsp;', '')\n                          .replace('&', '')\n                          .replace('nbsp;', '');\n      }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n// FROALA EDITOR\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\nimport 'froala-editor/js/plugins.pkgd.min.js';\n\n// File UpLoader\nimport { AngularFileUploaderModule } from \"angular-file-uploader\";\n\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ROUTING, APPROUTINGPROVIDERS } from './app.routes';\nimport { HomeComponent } from './components/home/home.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserEditComponent } from './components/user-edit/user-edit.component';\nimport { CategoryNewComponent } from './components/category-new/category-new.component';\nimport { PostNewComponent } from './components/post-new/post-new.component';\nimport { ImagenonePipe } from './pipes/imagenone.pipe';\nimport { PostDetailComponent } from './components/post-detail/post-detail.component';\nimport { PostEditComponent } from './components/post-edit/post-edit.component';\nimport { CategoryDetailComponent } from './components/category-detail/category-detail.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ErrorComponent,\n    CategoriasComponent,\n    UserEditComponent,\n    CategoryNewComponent,\n    PostNewComponent,\n    ImagenonePipe,\n    PostDetailComponent,\n    PostEditComponent,\n    CategoryDetailComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ROUTING,\n    HttpClientModule,\n    FroalaEditorModule.forRoot(),\n    FroalaViewModule.forRoot(),\n    AngularFileUploaderModule\n  ],\n  providers: [\n    APPROUTINGPROVIDERS\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXRlZ29yaWFzLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { urlglobal } from './apiglobal';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  url = urlglobal.url;\n  token: string;\n\n  constructor(private http:HttpClient)\n  {\n\n  }\n\n  addnewCategory(token, category): Observable<any>\n  {\n    let json = JSON.stringify(category);\n    // El backend solo lee un String, \n    // y pues ese string se codifica a JSON en el backend\n\n    let params = 'json='+json;\n    // key: json \n    // value de json de user\n    // COMO EN POSTMAN !! WUUAO\n        \n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                   .set('Authorization', token);\n    // Indico las cabecera \n\n    return this.http.post(this.url+'category',params, {headers: headers});\n\n  }\n\n  getCategories(): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type', 'aplication/x-www-form-urlencoded')\n    \n    return this.http.get(this.url +'category', {headers})\n  }\n  \n  getCategory(id): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type', 'aplication/x-www-form-urlencoded')\n    \n    return this.http.get(`${this.url}category/${id}`, {headers})\n  }\n\n  getPosts(id): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type', 'aplication/x-www-form-urlencoded')\n    \n    return this.http.get(`${this.url}post/category/${id}`, {headers})\n  }\n  \n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Pipe({\n  name: 'imagenone'\n})\nexport class ImagenonePipe implements PipeTransform {\n\n  url = 'assets/image/noimage.png';\n  constructor(private _http:HttpClient)\n  {\n    \n  }\n\n  transform(value: any, args?: any): any \n  {\n    return true\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlcnJvci5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXRlZ29yeS1uZXcuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<h1>{{ page_title }}</h1>\\n<p>\\n  categorias works!\\n</p>\\n\";","export default \"<h1>{{ page_title }}</h1>\\n<p>\\n  error works!\\n</p>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoryService } from '../../services/category.service';\nimport { urlglobal } from '../../services/apiglobal';\nimport { UserService } from '../../services/user.service';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-category-detail',\n  templateUrl: './category-detail.component.html',\n  styleUrls: ['./category-detail.component.css']\n})\nexport class CategoryDetailComponent implements OnInit \n{\n  public page_title;\n  public category;\n  public posts;\n  public url;\n  public identity;\n  public token;\n\n  constructor(private _activeRoute: ActivatedRoute,\n              private _categoryService: CategoryService,\n              private _userService: UserService,\n              private _postService: PostService)\n  {\n    this.url = urlglobal.url    \n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n\n  }\n  ngOnInit()\n  {\n    this.getPostByCategory();   \n  }\n\n  getPostByCategory()\n  {\n      this._activeRoute.params.subscribe(\n        data =>\n        {\n          let id = +data['id'];\n  \n          this._categoryService.getCategory(id).subscribe(\n            response =>\n            {\n              if (response.status == 'success')\n              {\n                this.category = response.category\n                //console.log(response); \n                //console.log(this.category.id);\n                console.log(this.identity.sub);\n                console.log(this.category.user_id);\n              }\n            },\n            error => console.log(error)  \n          )        \n\n          this._categoryService.getPosts(id).subscribe(\n            response =>\n            {\n              if (response.status == 'success')\n              {\n                console.log(\"Aui postbycategory\", response.post);\n                this.posts = response.post\n              }\n            },error => console.log('Error', error)\n            \n          )\n        }\n      )\n  }\n\n  deletepost(id)\n  {\n    this._postService.deletePost(this.token, id).subscribe(\n      response => \n      {\n        if(response.status == 'success')\n        {\n          this.getPostByCategory();\n        }\n      },\n      error =>\n      {\n        console.log(\"Error al borrar post\", error);\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { urlglobal } from './apiglobal';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService \n{\n  url: string;\n  token: string;\n  identity: any;\n\n  constructor(public http: HttpClient)\n  {\n    this.url = urlglobal.url;\n  }\n  \n  register(user): Observable<any>\n  {\n    let json = JSON.stringify(user);\n    // El backend solo lee un String, \n    // y pues ese string se codifica a JSON en el backend\n\n    let params = 'json='+json;\n    // key: json \n    // value de json de user\n    // COMO EN POSTMAN !! WUUAO\n        \n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded');\n    // Indico las cabecera \n\n    return this.http.post(this.url+'register',params, {headers: headers});\n\n  }\n\n  signup(user, gettoken = null): Observable<any>\n  {\n    if(gettoken != null)\n    {\n      user.getToken = 'true';\n    }\n\n    let json = JSON.stringify(user);\n    let params = 'json='+json;\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded');\n  \n    return this.http.post(this.url+'login',params, {headers: headers});\n  }\n\n  updateuser(token, user): Observable<any>\n  {\n    user.description = urlglobal.htmlEntities(user.description);\n    let json = JSON.stringify(user);\n    // Lo convierto a string para enviarlo al API\n\n    let params = \"json=\"+json;\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded')\n                                   .set('Authorization', token);\n\n    return this.http.put(this.url+'user/update',params,{headers: headers});\n\n  }\n\n  getIdentity()\n  {\n    let identity = JSON.parse(localStorage.getItem('identity'));\n\n    if(identity && identity != \"undefined\")\n    {\n      this.identity = identity;\n    }\n    else\n    {\n      this.identity = null;\n    }\n    return this.identity;\n  }\n\n  getToken()\n  {\n    let token =localStorage.getItem('token');\n\n    if(token && token != \"undefined\")\n    {\n      this.token = token;\n    }\n    else \n    {\n      this.token = null;\n    }\n\n    return this.token;\n  }\n\n  traerUser(id): Observable<any>\n  {\n    return this.http.get(this.url+'user/detail/'+id);\n  }\n\n  getPosts(id): Observable<any>\n  {\n    let headers = new HttpHeaders().set('Content-Type', 'aplication/x-www-form-urlencoded')\n    \n    return this.http.get(`${this.url}post/user/${id}`, {headers})\n  }\n}\n","export default \"<div class=\\\"container my-5\\\">\\n  <h1>{{ page_title }}</h1>\\n  <hr><br>\\n\\n  <div class=\\\"card my-2\\\" *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"card-header\\\">\\n        <h2>{{ post.title }}</h2>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-10\\\">\\n              <div class=\\\" mb-0\\\">\\n                  <p [innerHTML]=\\\"post.content\\\"></p>\\n                  <footer class=\\\"blockquote-footer\\\">Por \\n                    <cite title=\\\"Source Title\\\">{{ post.user.name + ' '+ post.user.surname }}</cite></footer>\\n                  </div>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n            <img src=\\\"{{ url + 'post/image/'+post.image }}\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PostService } from '../../services/post.service';\nimport { UserService } from '../../services/user.service';\nimport { Post } from 'src/app/models/post';\nimport { urlglobal } from '../../services/apiglobal';\nimport { CategoryService } from '../../services/category.service';\n\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent implements OnInit {\n\n  public token:string;\n  public identity:string;\n\n  public page_title:string;\n  public post: Post;\n  public status: string;\n  urlapi = urlglobal.url;\n  public categories;\n  public id;\n\n  opcionesfroala: Object = {\n    language: 'es',\n    toolbarButtons: {\n      'moreText': {\n        'buttons': ['bold', 'italic', 'underline', 'strikeThrough', 'paragraphFormat', 'superscript', \n        'fontFamily', 'fontSize', 'textColor', 'backgroundColor', 'inlineClass', 'inlineStyle',\n         'clearFormatting']\n      }\n    }\n  };\n\n  afuConfig = {\n    multiple: false,\n    formatsAllowed: \".jpg,.png, .gig, .jpeg\",\n    maxSize: \"50\",\n    uploadAPI:  {\n      url: this.urlapi + 'post/upload',\n      headers: {\n      \"Authorization\" : this._userService.getToken()\n      }\n    },\n    theme: \"attachPin\",\n    hideProgressBar: false,\n    hideResetBtn: false,\n    hideSelectBtn: false,\n    replaceTexts: {\n      selectFileBtn: 'Select Files',\n      resetBtn: 'Reset',\n      uploadBtn: 'Upload',\n      dragNDropBox: 'Drag N Drop',\n      attachPinBtn: 'Sube Tu Imagen para el POST',\n      afterUploadMsg_success: 'Successfully Uploaded !',\n      afterUploadMsg_error: 'Upload Failed !'\n    }\n  };\n\n  constructor(private _activeRoute: ActivatedRoute,\n              private _postService: PostService,\n              private _userService: UserService,\n              private _categoryService:CategoryService,\n              private _router:Router\n)\n  {\n    this.token = _userService.getToken();\n    this.identity = _userService.getIdentity();\n    this.page_title = 'Editar Post';\n    this.status = '';\n\n    \n\n    this._activeRoute.params.subscribe(\n      data =>\n      {\n        this.id = +data['id'];\n\n        _postService.getPost(this.id).subscribe(\n          response => \n          {\n            if (response.status == 'success')\n            {\n              //console.log(response.posts);\n              delete response.posts['user']\n              this.post = response.posts;\n              \n              let userid = + this.post.user_id;\n              // Comprobar si el dueño del POST, para editar\n              // Toco casting a int porque son string, pues eso dice el EDITOR\n              if(userid != +this.identity.sub)\n              {\n                this._router.navigate(['/home']);\n              }\n\n            }\n          },\n          error => \n          {\n\n          }\n        );\n      }\n    );\n\n  }\n\n  ngOnInit()\n  {\n    this.getCategories()\n  }\n\n  editpost(form){\n    console.log(this.post);\n    this._postService.updatepost(this.token,this.post,this.id).subscribe(\n      response =>\n      {\n        if (response.status == 'success')\n        {\n          this.status = response.status;\n        }\n      },\n      error => \n      {\n        console.log(error);\n      }\n    );\n    \n  }\n\n  getCategories()\n  {\n    this._categoryService.getCategories().subscribe(\n      response =>\n      {\n        // console.log(response.categories);\n        this.categories = response.categories;\n      }\n    );\n  }\n\n  ImagenUpload(datos)\n  {\n    let image_data = JSON.parse(datos.response);\n    this.post.image = image_data.nameimage;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3N0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n<div class=\\\"container-fluid my-3\\\" *ngIf=\\\"posts\\\">\\n<!-- Cuando la variable post tenga contenido miestre este div -->\\n  \\n  <h1>{{ page_title }}</h1>\\n  <hr>\\n\\n  <div class=\\\"card-columns\\\">\\n    <article class=\\\"card w-100\\\" *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"card-header\\\">\\n\\n        <h3>\\n        <a class=\\\"\\\" \\n         [routerLink]=\\\"[ '/entrada',post.id]\\\" > {{ post.title }}</a> \\n        </h3>\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"post-image\\\" *ngIf=\\\"post.image; else imagenone\\\">\\n          <img [src]=\\\"url +'post/image/' + post.image\\\" [alt]=\\\"post.title\\\" class=\\\"w-100\\\"/>\\n        </div>\\n\\n        <ng-template class=\\\"post-image\\\" #imagenone>\\n            <img src=\\\"assets/images/noimage.png\\\" alt=\\\"imagen default\\\" class=\\\"w-100\\\">\\n        </ng-template>\\n\\n\\n        <!-- Botones -->\\n        <div class=\\\"post-buttons m-3\\\">\\n          <a [routerLink]=\\\"[ '/entrada',post.id]\\\" class=\\\"mr-2 btn btn-success\\\">Leer</a>\\n          <span *ngIf=\\\"indentity && indentity.sub == post.user_id\\\">\\n            <a [routerLink]=\\\"[ '/editar-entrada',post.id]\\\" class=\\\"mr-2 btn btn-primary\\\">Editar</a>\\n            <a  class=\\\"btn btn-danger\\\" style=\\\"color: #fff\\\"\\n            data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#modalborrapost'+post.id\\\">Borrar</a>\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"{{ 'modalborrapost'+ post.id}}\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Borrar Post</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <p>¿ Está seguro que quiere eliminar el post ?<br/></p>\\n                  <h5><b>\\\"{{  post.title }}\\\"</b></h5>\\n                   \\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\"\\n                 (click)=\\\"deletepost(post.id)\\\">\\n                  Borrar Post\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n    </article>\\n\\n    \\n  </div>\\n\\n<div class=\\\"loading\\\" *ngIf=\\\"!posts\\\">\\n  Cargando..\\n</div>\\n\\n\\n\";","export default \"<div class=\\\"col-md-12\\\" *ngIf=\\\"post; else loading\\\">\\n  <h1>{{ post.title }}</h1>\\n  <hr>\\n  \\n  <p>\\n    {{ post.category.name }} - <a [routerLink]=\\\"[ '/perfil', post.user.id ]\\\">\\n      {{ post.user.name + \\\" \\\" + post.user.surname }}\\n    </a>\\n  </p>\\n  <hr>\\n<!-- \\n  Pintar HTML sin etiquetas\\n  Hay que utilizar una propiedad de Angular llamada [innerHTML]=\\\"aqui la variable\\\" -->\\n\\n  <p [innerHTML]=\\\"post.content\\\"></p>\\n</div>\\n\\n<ng-template #loading>\\n    <div class=\\\"col-md-12\\\">\\n      Cargando...\\n    </div>\\n</ng-template>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}